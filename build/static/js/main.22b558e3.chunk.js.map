{"version":3,"sources":["components/Card/Card.tsx","components/Icon/icon.tsx","components/Slider/slider.tsx","components/Message/message.tsx","components/Spin/spin.tsx","components/Tabs/TabContext.ts","components/Tabs/TabNavList.tsx","components/Tabs/TabPanelList.tsx","components/Tabs/TabPane.tsx","components/Tabs/index.ts","components/Tabs/Tabs.tsx","application/Player/store/reducer.ts","utils/lyric-creator.ts","application/Player/component/normalPlayer.tsx","application/Player/component/playList.tsx","services/playerApi.ts","application/Player/store/sagas.ts","application/Player/index.tsx","application/Home/index.tsx","routes/index.tsx","application/Home/store/constans.ts","application/Home/store/reducer.ts","services/albumApi.ts","application/Album/store/sagas.ts","application/Album/store/reducer.ts","services/rankApi.ts","application/Rank/store/sagas.ts","application/Rank/store/reducer.ts","services/searchApi.ts","application/Search/store/sagas.ts","application/Search/store/reducer.ts","services/singerApi.ts","application/Singer/store/sagas.ts","application/Singer/store/reducer.ts","store/reducers.ts","application/Home/store/sagas.ts","application/Home/store/index.ts","store/sagas.ts","store/index.ts","App.tsx","reportWebVitals.ts","index.tsx","utils/request.ts","services/index.ts","application/Search/store/constants.ts","application/Singer/store/constants.ts","baseUI/Header/header.tsx","baseUI/Scroll/scroll.tsx","baseUI/HorizenScroll/index.tsx","baseUI/Marquee/marquee.tsx","baseUI/Progress/progress.tsx","baseUI/musicNote/index.tsx","baseUI/SongList/index.tsx","baseUI/PlayList/index.tsx","application/Album/store/constants.ts","application/Rank/store/constans.ts","services/discoverApi.ts","application/Discover/store/constants.ts","application/Discover/store/sagas.ts","application/Discover/store/reducer.ts","application/Recommend/store/constants.ts","services/recommendAPI.ts","application/Recommend/store/saga.ts","application/Recommend/store/reducer.ts","assets/img/defaultmusic.png","application/Player/store/constans.ts","utils/tools.ts"],"names":["Card","props","title","extra","className","headerClassName","headerStyle","bodyClassName","bodyStyle","classes","classNames","headerClasses","bodyClasses","style","children","Icon","theme","Swiper","use","Pagination","Autoplay","Slider","useState","swiperEle","setSwiperEle","imgList","useEffect","length","swiper","loop","autoplay","pagination","el","map","slider","index","src","imageUrl","width","height","alt","Layout","content","nodePosition","num","nums","Message","info","type","msgWrapper","wrapper","document","createElement","setAttribute","child","appendChild","body","getMsgWrapper","timer","ReactDOM","render","params","name","animation","opacity","top","presets","duration","easing","animations","registerAnimation","runAnimation","window","setTimeout","_params","JSON","parse","stringify","reverse","delay","unmountComponentAtNode","clearTimeout","getElementsByClassName","parent","parentElement","removeChild","unmountMsgWrapper","bind","Spin","icon","spin","createContext","TabNavList","ActiveKey","onTabClick","context","React","useContext","TabContext","tabs","item","i","key","label","selected","onClick","e","TabPannelList","activeIndex","findIndex","tab","marginLeft","cloneElement","node","tabKey","active","TabPanne","activeKey","setVisited","mergedStyle","visibility","overflowY","TransTabs","defaultActiveKey","onChange","otherprops","ChildrenToArray","isValidElement","undefined","String","filter","parseTabList","memoContext","useMemo","setActiveKey","console","log","shareProps","TabNavProps","TabPaneListProps","Provider","value","Item","TabPane","EPlayMode","timeExp","LyricFormater","lrc","handle","lines","playState","currentIndex","startStamp","this","initLines","timing","controllingProgress","findCuurentIndex","getCurrentLyric","Number","Date","_playRest","offset","play","stop","lineIndex","text","time","lineArray","split","line","result","exec","replace","trim","slice","push","sort","a","b","preTime","handleInsertSong","draft","song","nextIndex","findCurrentIndex","playList","splice","sequenceIndex","currentSong","sequencePlayList","fsIndex","defaultState","isFullScreen","playing","playmode","showPlayList","playmodeText","PlayerReducer","state","action","produce","payload","ActionType","id","NormalPlayer","ProgressPercent","currentTime","durationTime","toggleFullScreen","handleClickPlay","onProgressChange","lastSong","nextSong","handleChangeMode","toggleShowPlayList","currentPlayingLyric","currentLyric","currentLineNum","isLyricMode","setIsLyricMode","normalPlayerRef","useRef","cdWrapperRef","transform","prefixStyle","lyricScrollRef","lyricLineRefs","CDcontainerRef","lyriccontainerRef","getMoveDistance","useCallback","vw2px","documentElement","clientWidth","smallCDHeight","smallCDoffsetBottom","bigCDHeight","bigCDTop","y","innerHeight","scale","enterAnimation","current","display","afterEnter","unregisterAnimation","leaveAnimation","transition","afterLeave","RenderPlaymodeIcon","sequence","random","RenderMiddleCD","isShow","CD_PIC_CLASSES","pause","cdClasses","cdWrapperShow","CSSTransition","timeout","in","nodeRef","ref","al","picUrl","RenderMiddlelyric","lyricClasses","lyricShow","curLineClasses","createRef","bScroll","getBScroll","lineElement","scrollToElement","scrollTo","mountOnEnter","onEnter","onEntered","onExit","onExited","getName","ar","formatPlayTime","percent","percentChange","_","memo","PlayList","changeCurrentIndex","handleDeleteSong","playListWrapperRef","decorateRef","playListRef","RenderList","liClass","isSelect","addEventListener","foo","removeEventListener","target","nodeType","tagName","parentNode","getAttribute","handleClickSong","getLyricReq","Request","request","url","getSongDetailRequest","ids","changePlaymode","addSongToList","getLyric","getSongDetail","mode","select","Player","put","newList","shuffle","error","Array","newSequenceList","newPlayList","call","lyric","songs","takeLatest","setCurrentTime","setDurationTime","setPlayingLyric","dispatch","useDispatch","audioRef","songReady","LyricRef","currentLineRef","useSelector","changePlayingState","togglePlay","resetAudioTime","newIndex","status","lyricCallBack","ProgressControl","audioControler","then","catch","songUrl","createSongUrl","dt","NormalPlayerProps","newTime","PlayListProps","stopPropagation","isEmptyObject","onTimeUpdate","event","onEnded","onError","Home","route","Global_Loading","handleOpenPlayer","renderRoutes","routes","to","activeClassName","Discover","lazy","Recommend","Album","Rank","Search","Singer","SuspenseComponent","Component","fallback","path","component","exact","CHANGE_GLOBAL_LOADING","HomeReducer","getAlbumDetail","fetchAlbumDetail","playlist","ActionTypes","currentAlbum","AlbumReducer","getRankList","fetchRankList","list","rankList","RankReducer","getHotKeysRequest","getSuggestListRequest","keywords","getSearchResultRequest","getHotKeys","search","hots","all","suggests","suggestsObj","order","hotKeyList","suggestObject","songsList","enterLoading","SearchReducer","getResOrderLable","getSingerDataReq","getSingerData","artist","hotSongs","songsOfArtist","SingerReducer","RootReducers","combineReducers","DiscoverReducer","RecommendReducer","fetchList","watchGetList","takeEvery","rootSaga","homeSaga","rootSagas","HomeSagas","DiscoverSagas","RecommendSagas","AlbumSagas","RankSagas","PlayerSagas","SearchSagas","SingerSagas","sagaMiddleware","createSagaMiddleware","composed","compose","applyMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","run","App","getElementById","addAndRemove","audio","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","library","add","fas","StrictMode","apiBaseUrl","axios","defaults","HttpRequest","baseUrl","options","axiosInstance","create","_options","mergeOptions","interceptors","config","Promise","reject","response","res","data","code","err","baseURL","Requset","SET_HOT_KEYWRODS","SET_SUGGEST_LIST","SET_RESULT_SONGS_LIST","SET_ENTER_LOADING","GET_HOT_KEYWRODS","SEARCH_KEYWORD","CLEAR_DATA","GET_SINGER","CHANGE_SINGER","CHANGE_SONGS_OF_SINGER","Header","forwardRef","handleClick","rolling","Scroll","setBScroll","scrollContaninerRef","direction","click","refresh","bounceTop","pullUpLoading","pullDownLoading","bounceBottom","pullUp","pullDown","onScroll","scroll","BScroll","scrollX","scrollY","probeType","bounce","bottom","on","off","maxScrollY","pos","finishPullDown","defaultProps","HorizenScroll","HorizenWrapperRef","HorizenScrollRef","Dom","items","querySelectorAll","totalWidth","from","forEach","offsetWidth","Marquee","Progress","progressBarRef","progressRef","progressBtnRef","TouchInfo","setTouchInfo","barwidth","updateTheProgress","distance","sendNewProgressData","barWidth","newPercent","domRect","getBoundingClientRect","pageX","left","onTouchStart","touchObj","startedTouch","startX","touches","passed","onTouchMove","DeltaX","Math","min","max","onTouchEnd","newTouchInfo","MusicNote","refs","WrapperRef","startAnimation","running","querySelector","useImperativeHandle","SongList","showNum","showPlayAll","onClickCallback","onClickPlayAll","wrapperClasses","itemClasses","isIndent","musicNoteRef","artists","albumName","album","nativeEvent","clientY","CommonPlaylist","placeholder","defaultImg","coverImgUrl","getCount","playCount","GET_ALBUMDETAIL","SAVE_ALBUMDETAIL","GET_RANKLIST","SAVE_RANKLIST","getBannerList","getRecommendList","getVideoUrlReq","GET_BANNER","SAVE_BANNER","GET_RECOMMEND","SAVE_RECOMMEND","GET_VIDEO_URL","SAVE_VIDEO_URL","fetchBanner","fetchRecommendList","fetchVideo","DiscoverWatcher","banners","actionTypes","urls","bannerList","recommendList","videoUrl","GET_CATELIST","SAVE_CATELIST","GET_PLAYLISTS","SAVE_PLAYLISTS","CHANGE_CATETYPE","CHANGE_LOADING","getHotCateList","getPlayLists","fetchHotCateList","fetchPlayLists","tags","param","cat","limit","playlists","cateList","playLists","loading","SET_ISFULL_SCREEN","SET_CURRENT_SONG","SET_PLAYING_STATE","SET_SEQUECE_PLAYLIST","SET_PLAYLIST","SET_PLAY_MODE","SET_CURRENT_INDEX","SET_SHOW_PLAYLIST","CHANGE_PLAYMODE","SET_PLAYMODE_TEXT","ADD_CURRENT_SONG","DEL_CURRENT_SONG","GET_LYRIC","SAVE_LYRIC","GET_SONG_DETAIL","INSERT_SONG","count","ceil","nameArr","reduce","currentValue","obj","constructor","Object","keys","filterRankList","officialList","choiceness","musicstyle","global","choicenessList","musicstyleList","globalList","specialList","tracks","list2","cur","some","vendor","elementStyle","transformNames","webkit","Moz","O","ms","standard","charAt","toUpperCase","substr","interval","_interval","minute","second","toString","padStart","arr","newArr","m","option","ret","Children","keepEmpty","isArray","concat","ReactIs"],"mappings":"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","file":"static/js/main.22b558e3.chunk.js","sourcesContent":["import classNames from 'classnames';\r\nimport React, { CSSProperties } from 'react';\r\nimport { INativeProps } from '../../utils/common_interface';\r\ninterface ICardProps {\r\n  title: React.ReactNode; // header 左边区域\r\n  extra?: React.ReactNode; // header 右边区域\r\n  headerStyle?: React.CSSProperties;\r\n  headerClassName?: string;\r\n  bodyStyle?: React.CSSProperties;\r\n  bodyClassName?: string;\r\n  onClick?: (event: MouseEvent) => void;\r\n}\r\n\r\nconst Card: React.FC<ICardProps & INativeProps> = (props) => {\r\n  const { title, extra } = props;\r\n  const { className, headerClassName, headerStyle, bodyClassName, bodyStyle } = props;\r\n  const classes = classNames('card-wrapper', className);\r\n  const headerClasses = classNames('card-header', headerClassName);\r\n  const bodyClasses = classNames('card-body', bodyClassName);\r\n  return (\r\n    <div className={classes}>\r\n      <div className={headerClasses} style={headerStyle}>\r\n        <div className=\"card-header-title\">{title}</div>\r\n        <div className=\"card-header-extra\">{extra}</div>\r\n      </div>\r\n      <div className={bodyClasses} style={bodyStyle}>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon, FontAwesomeIconProps } from '@fortawesome/react-fontawesome';\r\nimport classNames from 'classnames';\r\n\r\ntype themeType = 'default' | 'primary' | 'success' | 'danger' | 'light';\r\n\r\ninterface IconProps extends FontAwesomeIconProps {\r\n    theme?: themeType;\r\n}\r\n\r\nconst Icon: React.FC<IconProps> = (props) => {\r\n    const { className, theme } = props;\r\n    const classes = classNames('my-icon', className, {\r\n        [`my-icon-${theme}`]: theme\r\n    });\r\n    return <FontAwesomeIcon {...props} className={classes} />;\r\n};\r\n\r\nexport default Icon;\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\nimport Swiper, { Pagination, Autoplay } from 'swiper';\r\nimport 'swiper/swiper-bundle.css';\r\nSwiper.use([Pagination, Autoplay]);\r\n\r\ninterface ISliderProps {\r\n  imgList: { imageUrl: string }[];\r\n}\r\n\r\nconst Slider: React.FC<ISliderProps> = (props) => {\r\n  const [swiperEle, setSwiperEle] = useState<Swiper>();\r\n  const { imgList } = props;\r\n  useEffect(() => {\r\n    if (imgList.length !== 0 && !swiperEle) {\r\n      const swiper = new Swiper('.slider-container', {\r\n        loop: true,\r\n        autoplay: true,\r\n        pagination: { el: '.swiper-pagination' }\r\n      });\r\n      setSwiperEle(swiper);\r\n    }\r\n  }, [imgList.length]);\r\n  return (\r\n    <div className=\"sliderComponent\">\r\n      <div className=\"slider-mask\" />\r\n      <div className=\"slider-container\">\r\n        <div className=\"swiper-wrapper\">\r\n          {imgList.map((slider, index) => {\r\n            return (\r\n              <div className=\"swiper-slide\" key={slider.imageUrl + index}>\r\n                <div className=\"slider-nav\">\r\n                  <img src={slider.imageUrl} width=\"100%\" height=\"100%\" alt=\"推荐\" />\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"swiper-pagination\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","/*\r\n * @Date: 2022-01-06 14:47:49\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2022-01-07 14:50:40\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\components\\Message\\message.tsx\r\n */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport animations from 'create-keyframe-animation';\r\n// ==================== Type =======================\r\ninterface IParams {\r\n  name: string;\r\n  animation: any[];\r\n  presets: { duration: number; easing: string; delay?: number };\r\n}\r\n// ==================== Content Layout =======================\r\n\r\ninterface ILayout {\r\n  content: React.ReactNode;\r\n}\r\nconst Layout: React.FC<ILayout> = (props) => {\r\n  const { content } = props;\r\n  return <div className=\"m-message-notice-content\">{content}</div>;\r\n};\r\n\r\n// ==================== Content Layout =======================\r\n\r\nconst nodePosition = (num: number) => {\r\n  const marginTop = 45;\r\n  const msgHeight = 40;\r\n  const gap = 10;\r\n  return [0, marginTop + (num - 1) * msgHeight + gap];\r\n};\r\n\r\nconst unmountMsgWrapper = () => {\r\n  const wrapper = document.getElementsByClassName('m-message')[0];\r\n  const parent = wrapper.parentElement;\r\n  parent?.removeChild(wrapper);\r\n};\r\n\r\nconst getMsgWrapper = () => {\r\n  const wrapper = document.createElement('div');\r\n  wrapper.setAttribute('class', 'm-message');\r\n  const child = document.createElement('div'); // 目标不能为空节点，否则无法 render\r\n  wrapper.appendChild(child);\r\n  document.body.appendChild(wrapper);\r\n  return wrapper;\r\n};\r\nlet nums = 0;\r\nconst alert = (type: string, content: React.ReactNode) => {\r\n  // TODO: 使用传入type设计不同样式；拓展 显示时间\r\n  let msgWrapper = getMsgWrapper();\r\n  let timer = 0;\r\n  let duration = 500;\r\n\r\n  ReactDOM.render(<Layout content={content} />, msgWrapper as HTMLElement, () => {\r\n    nums++;\r\n    let params: IParams = {\r\n      name: `msgFade${nodePosition(nums)[1]}`,\r\n      animation: [\r\n        {\r\n          opacity: 0,\r\n          top: 0\r\n        },\r\n        {\r\n          opacity: 1,\r\n          top: `${nodePosition(nums)[1]}px`\r\n        }\r\n      ],\r\n      presets: {\r\n        duration: duration,\r\n        easing: 'linear'\r\n      }\r\n    };\r\n    animations.registerAnimation(params);\r\n    animations.runAnimation(msgWrapper, params.name);\r\n    timer = window.setTimeout(() => {\r\n      let _params: IParams = JSON.parse(JSON.stringify(params));\r\n      _params.animation = _params.animation.reverse();\r\n      _params.name = `${_params.name}H`;\r\n      _params.presets.delay = 800; // 停留一下\r\n      animations.registerAnimation(_params);\r\n      animations.runAnimation(msgWrapper, _params.name, () => {\r\n        nums--;\r\n        ReactDOM.unmountComponentAtNode(msgWrapper as HTMLElement);\r\n        clearTimeout(timer);\r\n        unmountMsgWrapper();\r\n      });\r\n    }, duration);\r\n  });\r\n};\r\n\r\ninterface IMessage {\r\n  info: (content: React.ReactNode) => void;\r\n}\r\nconst info = alert.bind(this, 'info');\r\nconst Message: IMessage = {\r\n  info\r\n};\r\n\r\nexport default Message;\r\n","/*\r\n * @Date: 2022-01-07 11:01:35\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2022-01-07 13:50:21\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\components\\Spin\\spin.tsx\r\n */\r\nimport React from 'react';\r\nimport Icon from '../Icon/icon';\r\n\r\nconst Spin: React.FC = () => {\r\n  return (\r\n    <div className=\"spin-wrapper\">\r\n      <div className=\"spin-dot\">\r\n        <Icon icon=\"spinner\" spin />\r\n        <p>加载中</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spin;\r\n","/*\r\n * @Date: 2021-12-15 14:37:15\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-16 14:33:29\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\components\\Tabs\\TabContext.ts\r\n */\r\nimport React, { createContext } from 'react';\r\nimport type { ITab } from './interface';\r\n\r\nexport interface TabContextProps {\r\n  tabs: ITab[];\r\n}\r\n\r\nexport default createContext<TabContextProps | null>(null);\r\n","/*\r\n * @Date: 2021-12-15 14:03:14\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-17 17:33:03\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\components\\Tabs\\TabNavList.tsx\r\n */\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\nimport { HorizenScroll } from '../../baseUI';\r\nimport TabContext from './TabContext';\r\n\r\ninterface ITabNavListProps {\r\n  ActiveKey: string;\r\n  onTabClick: (activeKey: string, e: React.MouseEvent) => void;\r\n}\r\n\r\nfunction TabNavList(props: ITabNavListProps) {\r\n  const { ActiveKey } = props;\r\n  const { onTabClick } = props;\r\n  const context = React.useContext(TabContext);\r\n  if (!context) {\r\n    return null;\r\n  }\r\n  const { tabs } = context;\r\n  const RenderTabNodes = (): React.ReactElement[] => {\r\n    return tabs.map((item, i) => {\r\n      const { key, label } = item;\r\n      const classes = classNames('r-cate-item horizen-item', {\r\n        selected: ActiveKey === key\r\n      });\r\n      return (\r\n        <span key={key} className={classes} onClick={(e) => onTabClick(key, e)}>\r\n          {label}\r\n        </span>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"tabs-nav\">\r\n      <HorizenScroll>\r\n        <div className=\"r-cate-wrapper\">{RenderTabNodes()}</div>\r\n      </HorizenScroll>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TabNavList;\r\n","/*\r\n * @Date: 2021-12-15 14:06:23\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-16 16:36:23\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\components\\Tabs\\TabPanelList.tsx\r\n */\r\nimport React from 'react';\r\nimport TabContext from './TabContext';\r\n\r\nexport interface ITabPaneListProps {\r\n  ActiveKey?: string;\r\n}\r\n\r\nfunction TabPannelList({ ActiveKey }: ITabPaneListProps) {\r\n  const context = React.useContext(TabContext);\r\n  if (!context) {\r\n    return null;\r\n  }\r\n  const { tabs } = context;\r\n  const activeIndex = tabs.findIndex((tab) => tab.key === ActiveKey);\r\n  return (\r\n    <div className=\"tab-content-wrapper\">\r\n      <div className=\"tab-content\" style={activeIndex ? { marginLeft: `-${activeIndex}00%` } : {}}>\r\n        {tabs.map((tab) => {\r\n          return React.cloneElement(tab.node, {\r\n            key: tab.key,\r\n            tabKey: tab.key,\r\n            active: tab.key === ActiveKey\r\n          });\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TabPannelList;\r\n","/*\r\n * @Date: 2021-12-16 14:15:24\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-17 16:35:43\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\components\\Tabs\\TabPane.tsx\r\n */\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\n\r\nexport interface ITabPaneProps {\r\n  label?: string;\r\n  activeKey?: string;\r\n  children?: React.ReactNode;\r\n  active?: boolean;\r\n}\r\n\r\nfunction TabPanne(props: ITabPaneProps) {\r\n  const { activeKey, children, active } = props;\r\n  const [visited, setVisited] = React.useState(false);\r\n  React.useEffect(() => {\r\n    if (active) {\r\n      setVisited(true);\r\n    }\r\n  }, [active]);\r\n\r\n  const classes = classNames('tab-tabpane', {\r\n    'tabpane-active': active\r\n  });\r\n  const mergedStyle: React.CSSProperties = {};\r\n  if (!active) {\r\n    mergedStyle.visibility = 'hidden';\r\n    mergedStyle.height = 0;\r\n    mergedStyle.overflowY = 'hidden';\r\n  }\r\n  return (\r\n    <div className={classes} style={mergedStyle}>\r\n      {active && children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TabPanne;\r\n","/*\r\n * @Date: 2021-12-16 14:02:13\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2022-01-06 17:33:51\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\components\\Tabs\\index.ts\r\n */\r\nimport _Tabs from './Tabs';\r\nimport { FC } from 'react';\r\nimport type { ITabsProps } from './Tabs';\r\nimport type { ITabPaneProps } from './TabPane';\r\nimport TabPane from './TabPane';\r\n\r\ntype ITabsComponent = FC<ITabsProps> & {\r\n  Item: FC<ITabPaneProps>;\r\n};\r\n\r\nconst TransTabs = _Tabs as ITabsComponent;\r\nTransTabs.Item = TabPane;\r\n\r\nexport default TransTabs;\r\n","import classNames from 'classnames';\r\nimport React, { useMemo, useState, useEffect } from 'react';\r\nimport TabNavList from './TabNavList';\r\nimport TabPannelList from './TabPanelList';\r\nimport type { ITab } from './interface';\r\nimport TabContext from './TabContext';\r\nimport ChildrenToArray from '../../utils/tools';\r\nimport type { ITabPaneProps } from './TabPane';\r\nexport interface ITabsProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange'> {\r\n  defaultActiveKey?: string;\r\n  onChange?: (key: string) => void;\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n  children?: React.ReactNode;\r\n  onTabClick?: (activeKey: string, e: React.MouseEvent) => void;\r\n}\r\n\r\nfunction parseTabList(children: React.ReactNode): ITab[] {\r\n  const tabsArr = ChildrenToArray(children).map((node: React.ReactElement<ITabPaneProps>) => {\r\n    if (React.isValidElement(node)) {\r\n      const key = node.key !== undefined ? String(node.key) : undefined;\r\n      return {\r\n        key,\r\n        ...node.props,\r\n        node\r\n      };\r\n    }\r\n    return null as any;\r\n  });\r\n  return tabsArr.filter((tab) => tab);\r\n}\r\n\r\nfunction Tabs({\r\n  defaultActiveKey,\r\n  className,\r\n  style,\r\n  onChange,\r\n  children,\r\n  onTabClick,\r\n  ...otherprops\r\n}: ITabsProps) {\r\n  const tabs = parseTabList(children);\r\n  const memoContext = useMemo(() => ({ tabs }), [tabs, tabs.length]);\r\n  const [ActiveKey, setActiveKey] = useState('');\r\n  useEffect(() => {\r\n    if (!ActiveKey && tabs[0]) {\r\n      setActiveKey(tabs[0].key);\r\n    }\r\n  }, [tabs]);\r\n  console.log(ActiveKey);\r\n  const shareProps = {\r\n    ActiveKey\r\n  };\r\n\r\n  const onInternalTabClick = (key: string, e: React.MouseEvent) => {\r\n    if (onTabClick) {\r\n      onTabClick(key, e);\r\n    }\r\n    if (key !== ActiveKey) {\r\n      setActiveKey(key);\r\n    }\r\n  };\r\n  const TabNavProps = {\r\n    ...shareProps,\r\n    onTabClick: onInternalTabClick\r\n  };\r\n\r\n  const TabPaneListProps = {\r\n    ...shareProps\r\n  };\r\n  return (\r\n    <TabContext.Provider value={memoContext}>\r\n      <div className={classNames('beetle-tabs', className)} {...otherprops}>\r\n        <TabNavList {...TabNavProps} />\r\n        <TabPannelList {...TabPaneListProps} />\r\n      </div>\r\n    </TabContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Tabs;\r\n","/*\r\n * @Date: 2021-11-29 09:58:03\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2022-01-07 10:53:57\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Player\\store\\reducer.ts\r\n */\r\nimport { Reducer } from 'redux';\r\nimport produce, { Draft } from 'immer';\r\nimport * as ActionType from './constans';\r\nimport { findCurrentIndex } from '../../../utils/tools';\r\nimport { Message } from '../../../components';\r\n\r\nexport enum EPlayMode {\r\n  sequence,\r\n  loop,\r\n  random\r\n}\r\n\r\ntype TPlayModeTexts = '顺序播放' | '单曲循环' | '随机播放' | '切换失败';\r\nexport interface IPlayerState {\r\n  isFullScreen: boolean;\r\n  playing: boolean;\r\n  sequencePlayList: any[];\r\n  playList: any[];\r\n  playmode: EPlayMode;\r\n  playmodeText: TPlayModeTexts;\r\n  currentIndex: number;\r\n  showPlayList: boolean;\r\n  currentSong: any;\r\n  lrc: string;\r\n}\r\n\r\nconst handleInsertSong = (draft: IPlayerState, song: any) => {\r\n  let currentIndex = draft.currentIndex;\r\n  let nextIndex = findCurrentIndex(song, draft.playList);\r\n  if (currentIndex === nextIndex && currentIndex !== -1) return;\r\n  currentIndex++;\r\n  draft.playList.splice(currentIndex, 0, song);\r\n  if (nextIndex > -1) {\r\n    if (currentIndex > nextIndex) {\r\n      draft.playList.splice(nextIndex, 1);\r\n      currentIndex--;\r\n    } else {\r\n      draft.playList.splice(nextIndex + 1, 1);\r\n    }\r\n  }\r\n  let sequenceIndex = findCurrentIndex(draft.currentSong, draft.sequencePlayList) + 1;\r\n  let fsIndex = findCurrentIndex(song, draft.sequencePlayList);\r\n  draft.sequencePlayList.splice(sequenceIndex, 0, song);\r\n  if (fsIndex > -1) {\r\n    if (sequenceIndex > fsIndex) {\r\n      draft.sequencePlayList.splice(fsIndex, 1);\r\n      sequenceIndex--;\r\n    } else {\r\n      draft.sequencePlayList.splice(fsIndex + 1, 1);\r\n    }\r\n  }\r\n  draft.currentIndex = currentIndex;\r\n  draft.currentSong = song;\r\n};\r\n\r\nconst defaultState: IPlayerState = {\r\n  isFullScreen: false,\r\n  playing: false,\r\n  sequencePlayList: [],\r\n  playList: [],\r\n  playmode: 0,\r\n  currentIndex: -1,\r\n  showPlayList: false,\r\n  currentSong: {},\r\n  playmodeText: '顺序播放',\r\n  lrc: ''\r\n};\r\n\r\nconst PlayerReducer: Reducer<IPlayerState> = (state = defaultState, action) => {\r\n  return produce(state, (draft: Draft<IPlayerState>) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case ActionType.SET_ISFULL_SCREEN:\r\n        draft.isFullScreen = payload;\r\n        break;\r\n      case ActionType.SET_CURRENT_SONG:\r\n        draft.currentSong = payload;\r\n        break;\r\n      case ActionType.SET_CURRENT_INDEX:\r\n        draft.currentIndex = payload;\r\n        break;\r\n      case ActionType.SET_PLAYING_STATE:\r\n        draft.playing = payload;\r\n        break;\r\n      case ActionType.SET_PLAYLIST:\r\n        draft.playList = payload;\r\n        break;\r\n      case ActionType.SET_SEQUECE_PLAYLIST:\r\n        draft.sequencePlayList = payload;\r\n        break;\r\n      case ActionType.SET_PLAYMODE_TEXT:\r\n        draft.playmodeText = payload;\r\n        Message.info(payload);\r\n        break;\r\n      case ActionType.SET_PLAY_MODE:\r\n        draft.playmode = payload;\r\n        break;\r\n      case ActionType.SET_SHOW_PLAYLIST:\r\n        draft.showPlayList = payload;\r\n        break;\r\n      case ActionType.DEL_CURRENT_SONG:\r\n        draft.playList = draft.playList.filter((item) => item.id !== payload.id);\r\n        draft.sequencePlayList = draft.sequencePlayList.filter((item) => item.id !== payload.id);\r\n        break;\r\n      case ActionType.SAVE_LYRIC:\r\n        draft.lrc = payload;\r\n        break;\r\n      case ActionType.INSERT_SONG:\r\n        handleInsertSong(draft, payload);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default PlayerReducer;\r\n","/*\r\n * @Date: 2021-12-08 11:42:08\r\n * @LastEditors: Please set LastEditors\r\n * @LastEditTime: 2021-12-17 23:01:26\r\n * @Description:\r\n * @FilePath: /melodia-ts/src/utils/lyric-creator.ts\r\n */\r\n\r\nconst timeExp = /\\[(\\d{2,}):(\\d{2})(?:\\.(\\d{2,3}))?]/g;\r\ninterface ILineItem {\r\n  time: number;\r\n  text: string;\r\n}\r\ntype Tplay = (offset: number, controllingProgress: boolean) => void;\r\ntype TPlayState = 'play' | 'pause';\r\nclass LyricFormater {\r\n  public lines: ILineItem[];\r\n  private lrc: string;\r\n  private handle: Function;\r\n  private playState: TPlayState;\r\n  private currentIndex: number;\r\n  private startStamp: number;\r\n  private timer: any;\r\n  public constructor(lrc: string, handle: Function) {\r\n    this.lrc = lrc; // 原始数据\r\n    this.handle = handle; // 回调函数\r\n    this.lines = []; // 格式化后的数据\r\n    this.playState = 'pause'; // 播放状态\r\n    this.currentIndex = 0; // 当前行\r\n    this.startStamp = 0; // 开始时间戳\r\n    this.timer = 0;\r\n    this.initLines();\r\n  }\r\n\r\n  /**\r\n   * @param timing 当前播放进度， controllingProgress 是否在控制进度条\r\n   */\r\n  public play(timing = 0, controllingProgress = false) {\r\n    if (!this.lines.length) {\r\n      return;\r\n    }\r\n    this.playState = 'play';\r\n    this.currentIndex = this.findCuurentIndex(timing);\r\n    // 定位到行后将歌词传递给回调函数\r\n    this.getCurrentLyric(this.currentIndex - 1);\r\n    this.startStamp = Number(new Date()) - timing;\r\n    if (this.currentIndex < this.lines.length) {\r\n      clearTimeout(this.timer);\r\n      this._playRest(controllingProgress);\r\n    }\r\n  }\r\n\r\n  public ProgressControl(offset: number) {\r\n    this.play(offset, true);\r\n  }\r\n\r\n  public togglePlay(timing: number) {\r\n    if (this.playState === 'play') {\r\n      this.stop();\r\n    } else {\r\n      this.playState = 'play';\r\n      this.play(timing, true);\r\n    }\r\n  }\r\n\r\n  public stop() {\r\n    this.playState = 'pause';\r\n    clearTimeout(this.timer);\r\n  }\r\n\r\n  private getCurrentLyric(index: number) {\r\n    if (index < 0) return;\r\n    this.handle({\r\n      lineIndex: index,\r\n      text: this.lines[index].text\r\n    });\r\n  }\r\n\r\n  private findCuurentIndex(timing: number) {\r\n    if (timing >= this.lines[this.lines.length - 1].time) {\r\n      return this.lines.length - 1;\r\n    } else {\r\n      return this.lines.findIndex((item) => timing <= item.time);\r\n    }\r\n  }\r\n\r\n  private initLines() {\r\n    const lineArray = this.lrc.split('\\n');\r\n    for (let line of lineArray) {\r\n      // '[00:00.000] 作词 : 无'\r\n      let result = timeExp.exec(line);\r\n      //   [\r\n      //     \"[00:00.000]\",\r\n      //     \"00\",\r\n      //     \"00\",\r\n      //     \"000\"\r\n      // ]\r\n      if (!result) continue;\r\n      const text = line.replace(timeExp, '').trim(); // 去除时间戳\r\n\r\n      if (text) {\r\n        if (result[3].length === 3) {\r\n          result[3] = result[3].slice(0, result[3].length - 1); // 截取两位\r\n          this.lines.push({\r\n            time:\r\n              Number(result[1]) * 60 * 1000 +\r\n              Number(result[2]) * 1000 +\r\n              (Number(result[3]) || 0) * 10,\r\n            text\r\n          });\r\n        }\r\n      }\r\n    }\r\n    this.lines.sort((a, b) => a.time - b.time);\r\n  }\r\n\r\n  private _playRest(controllingProgress = false) {\r\n    // 通过定时器定时触发回调函数\r\n    let line = this.lines[this.currentIndex];\r\n    let delay;\r\n    if (controllingProgress) {\r\n      delay = line.time - (Number(new Date()) - this.startStamp);\r\n    } else {\r\n      // 拿到上一行的歌词开始时间，算间隔\r\n      let preTime = this.lines[this.currentIndex - 1] ? this.lines[this.currentIndex - 1].time : 0;\r\n      delay = line.time - preTime;\r\n    }\r\n    this.timer = setTimeout(() => {\r\n      this.getCurrentLyric(this.currentIndex++);\r\n      if (this.currentIndex < this.lines.length && this.playState === 'play') {\r\n        this._playRest();\r\n      }\r\n    }, delay);\r\n  }\r\n}\r\n\r\nexport default LyricFormater;\r\n","/*\r\n * @Date: 2021-11-29 14:29:06\r\n * @LastEditors: Please set LastEditors\r\n * @LastEditTime: 2021-12-17 23:00:37\r\n * @Description:\r\n * @FilePath: /melodia-ts/src/application/Player/component/normalPlayer.tsx\r\n */\r\nimport classNames from 'classnames';\r\nimport React, { useRef, useCallback, useEffect, useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { Marquee, Progress, Scroll } from '../../../baseUI';\r\nimport { Icon } from '../../../components';\r\nimport { formatPlayTime, getName, prefixStyle } from '../../../utils/tools';\r\nimport animations from 'create-keyframe-animation';\r\nimport { EPlayMode } from './../store/reducer';\r\ninterface INplayerProps {\r\n  song: any;\r\n  isFullScreen: boolean;\r\n  toggleFullScreen: Function;\r\n  playing: boolean;\r\n  handleClickPlay: Function;\r\n  ProgressPercent: number;\r\n  currentTime: number;\r\n  durationTime: number;\r\n  onProgressChange: Function;\r\n  lastSong: Function;\r\n  nextSong: Function;\r\n  handleChangeMode: Function;\r\n  playmode: number;\r\n  showPlayList: boolean;\r\n  toggleShowPlayList: Function;\r\n  currentPlayingLyric: any;\r\n  currentLyric: any;\r\n  currentLineNum: number;\r\n}\r\n\r\nconst NormalPlayer: React.FC<INplayerProps> = (props) => {\r\n  const {\r\n    song,\r\n    isFullScreen,\r\n    playing,\r\n    ProgressPercent,\r\n    currentTime,\r\n    durationTime,\r\n    playmode,\r\n    showPlayList\r\n  } = props;\r\n  const {\r\n    toggleFullScreen,\r\n    handleClickPlay,\r\n    onProgressChange,\r\n    lastSong,\r\n    nextSong,\r\n    handleChangeMode,\r\n    toggleShowPlayList\r\n  } = props;\r\n  const { currentPlayingLyric, currentLyric, currentLineNum } = props;\r\n  const [isLyricMode, setIsLyricMode] = useState(false);\r\n  const normalPlayerRef = useRef<HTMLElement>(null);\r\n  const cdWrapperRef = useRef<HTMLElement>(null);\r\n  const transform = prefixStyle('transform');\r\n  // const isLyricMode = useRef<any>(false);\r\n  const lyricScrollRef = useRef<any>();\r\n  const lyricLineRefs = useRef<any>([]);\r\n  const CDcontainerRef = useRef<any>(null);\r\n  const lyriccontainerRef = useRef<any>(null);\r\n\r\n  const getMoveDistance = useCallback(() => {\r\n    // 获取小圆到大圆中心到中心点的距离\r\n    // 只考虑Y轴运动\r\n    const vw2px = document.documentElement.clientWidth / 100;\r\n    // const smallCDWidth = 16 * vw2px;\r\n    const smallCDHeight = 16 * vw2px;\r\n    // const smallCDoffsetLeft = 42 * vw2px;\r\n    const smallCDoffsetBottom = 6 * vw2px;\r\n    // 大CD高度\r\n    const bigCDHeight = 82 * vw2px;\r\n    const bigCDTop = 40 * vw2px;\r\n    // 计算Y轴移动距离\r\n    const y =\r\n      window.innerHeight -\r\n      smallCDHeight / 2 -\r\n      smallCDoffsetBottom -\r\n      bigCDHeight / 2 -\r\n      bigCDTop +\r\n      30 * vw2px;\r\n    const scale = smallCDHeight / bigCDHeight; // 缩放比例\r\n    return {\r\n      y,\r\n      scale\r\n    };\r\n  }, []);\r\n  const enterAnimation = useCallback(() => {\r\n    if (normalPlayerRef.current) {\r\n      normalPlayerRef.current.style.display = 'block';\r\n      const { y, scale } = getMoveDistance();\r\n      let animation = {\r\n        0: {\r\n          transform: `translate3d(0, ${y}px, 0) scale(${scale})`\r\n        },\r\n        80: {\r\n          transform: `translate3d(0,-50px,0) scale(1.2)`\r\n        },\r\n        100: {\r\n          transform: `translate3d(0,0,0) scale(1)`\r\n        }\r\n      };\r\n      animations.registerAnimation({\r\n        name: 'move',\r\n        animation,\r\n        presets: {\r\n          duration: 400,\r\n          easing: 'linear'\r\n        }\r\n      });\r\n      animations.runAnimation(cdWrapperRef.current, 'move');\r\n    }\r\n  }, []);\r\n  const afterEnter = useCallback(() => {\r\n    // 进入后解绑\r\n    animations.unregisterAnimation('move');\r\n    if (cdWrapperRef.current) cdWrapperRef.current.style.animation = '';\r\n  }, []);\r\n\r\n  const leaveAnimation = useCallback(() => {\r\n    if (!cdWrapperRef.current) return;\r\n    const { y, scale } = getMoveDistance();\r\n    cdWrapperRef.current.style.transition = `all 0.4s`;\r\n    cdWrapperRef.current.style[transform as any] = `translate3d(0, ${y}px, 0) scale(${scale})`;\r\n  }, []);\r\n  const afterLeave = useCallback(() => {\r\n    if (!cdWrapperRef.current || !normalPlayerRef.current) return;\r\n    cdWrapperRef.current.style.transition = '';\r\n    cdWrapperRef.current.style[transform as any] = '';\r\n    normalPlayerRef.current.style.display = 'none';\r\n  }, []);\r\n  const changeProgressCallBack = (percent: number) => {\r\n    onProgressChange(percent);\r\n  };\r\n\r\n  const RenderPlaymodeIcon = useCallback(() => {\r\n    switch (playmode) {\r\n      case EPlayMode.sequence:\r\n        return <Icon icon=\"exchange-alt\" />;\r\n      case EPlayMode.loop:\r\n        return <Icon icon=\"redo\" />;\r\n      case EPlayMode.random:\r\n        return <Icon icon=\"random\" />;\r\n      default:\r\n        break;\r\n    }\r\n  }, [playmode]);\r\n\r\n  const playToggle = () => {\r\n    handleClickPlay(!playing);\r\n  };\r\n\r\n  const toggleLyricState = () => {\r\n    setIsLyricMode((state) => !state);\r\n  };\r\n\r\n  const RenderMiddleCD = useCallback(() => {\r\n    const isShow = !isLyricMode;\r\n    const CD_PIC_CLASSES = classNames('cd-image', {\r\n      play: playing,\r\n      pause: !playing\r\n    });\r\n    const cdClasses = classNames('cd-wrapper', {\r\n      cdWrapperShow: isShow\r\n    });\r\n    return (\r\n      <CSSTransition timeout={400} classNames=\"common-fadeIn\" in={isShow} nodeRef={CDcontainerRef}>\r\n        <section className={cdClasses} ref={CDcontainerRef}>\r\n          <div className=\"img-wrapper\">\r\n            <img className={CD_PIC_CLASSES} src={song.al.picUrl + '?param=400x400'} alt=\"\" />\r\n          </div>\r\n          <p className=\"playing_lyric\">{currentPlayingLyric}</p>\r\n        </section>\r\n      </CSSTransition>\r\n    );\r\n  }, [isLyricMode, playing, currentPlayingLyric]);\r\n\r\n  const RenderMiddlelyric = useCallback(() => {\r\n    const isShow = isLyricMode;\r\n    const lyricClasses = classNames('lyric_content', {\r\n      lyricShow: isShow\r\n    });\r\n    return (\r\n      <CSSTransition\r\n        timeout={400}\r\n        classNames=\"common-fadeIn\"\r\n        in={isShow}\r\n        nodeRef={lyriccontainerRef}\r\n      >\r\n        <section className=\"lyric-container\" ref={lyriccontainerRef}>\r\n          <Scroll ref={lyricScrollRef}>\r\n            <div className={lyricClasses}>\r\n              {currentLyric ? (\r\n                currentLyric.lines.map((item: any, index: number) => {\r\n                  const curLineClasses = classNames('text', {\r\n                    current: currentLineNum === index\r\n                  });\r\n                  lyricLineRefs.current[index] = React.createRef();\r\n                  return (\r\n                    <p\r\n                      className={curLineClasses}\r\n                      key={item + index}\r\n                      ref={lyricLineRefs.current[index]}\r\n                    >\r\n                      {item.text}\r\n                    </p>\r\n                  );\r\n                })\r\n              ) : (\r\n                <p className=\"text pure\"> 纯音乐，请欣赏。</p>\r\n              )}\r\n            </div>\r\n          </Scroll>\r\n        </section>\r\n      </CSSTransition>\r\n    );\r\n  }, [isLyricMode, currentLineNum]);\r\n\r\n  useEffect(() => {\r\n    if (!lyricScrollRef.current) return;\r\n    let bScroll = lyricScrollRef.current.getBScroll();\r\n    if (!bScroll) return;\r\n    if (currentLineNum > 5) {\r\n      let lineElement = lyricLineRefs.current[currentLineNum - 5].current;\r\n      bScroll.scrollToElement(lineElement, 1000);\r\n    } else if (currentLineNum > 0 && currentLineNum <= 5) {\r\n      // 当前歌词行数 <=5, 直接滚动到最顶端\r\n      bScroll.scrollTo(0, 0, 1000);\r\n    }\r\n  }, [currentLineNum]);\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={isFullScreen}\r\n      classNames=\"page-up\"\r\n      timeout={400}\r\n      mountOnEnter\r\n      nodeRef={normalPlayerRef}\r\n      onEnter={enterAnimation}\r\n      onEntered={afterEnter}\r\n      onExit={leaveAnimation}\r\n      onExited={afterLeave}\r\n    >\r\n      <section className=\"normal-player-container\" ref={normalPlayerRef}>\r\n        <div className=\"player-background\">\r\n          <img src={song.al.picUrl + '?param=300x300'} width=\"100%\" height=\"100%\" />\r\n        </div>\r\n        <div className=\"bg-decorate\" />\r\n        <article className=\"player-header\">\r\n          <span className=\"close-btn\" onClick={() => toggleFullScreen(false)}>\r\n            <Icon icon=\"chevron-down\" />\r\n          </span>\r\n          <div className=\"title-wrapper\">\r\n            <Marquee className=\"title\" text={song.name} />\r\n            <p className=\"subtitle\">{getName(song.ar)}</p>\r\n          </div>\r\n        </article>\r\n        <article className=\"player-middle\" ref={cdWrapperRef} onClick={toggleLyricState}>\r\n          {RenderMiddleCD()}\r\n          {RenderMiddlelyric()}\r\n        </article>\r\n        <article className=\"player-bottom\">\r\n          <div className=\"time-line-wrapper\">\r\n            <span>{formatPlayTime(currentTime)}</span>\r\n            <div className=\"progress-wrapper\">\r\n              <Progress percent={ProgressPercent} percentChange={changeProgressCallBack} />\r\n            </div>\r\n            <span>{formatPlayTime(durationTime)}</span>\r\n          </div>\r\n          <div className=\"player-control-bar\">\r\n            <span onClick={() => handleChangeMode()}>{RenderPlaymodeIcon()}</span>\r\n            <span>\r\n              <Icon icon=\"step-backward\" onClick={() => lastSong()} />\r\n            </span>\r\n            <span onClick={(e) => playToggle()}>\r\n              {playing ? <Icon icon=\"pause\" /> : <Icon icon=\"play\" />}\r\n            </span>\r\n            <span>\r\n              <Icon icon=\"step-forward\" onClick={() => nextSong()} />\r\n            </span>\r\n            <span onClick={(_) => toggleShowPlayList(true)}>\r\n              <Icon icon=\"stream\" />\r\n            </span>\r\n          </div>\r\n        </article>\r\n      </section>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default React.memo(NormalPlayer);\r\n","/*\r\n * @Date: 2021-11-29 14:27:08\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-13 14:21:01\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Player\\component\\playList.tsx\r\n */\r\nimport React, { useRef, useEffect, useCallback } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { Scroll } from '../../../baseUI';\r\nimport animations from 'create-keyframe-animation';\r\nimport { prefixStyle, getName } from '../../../utils/tools';\r\nimport { Icon } from '../../../components';\r\nimport classNames from 'classnames';\r\ninterface IPlayListProps {\r\n  showPlayList: boolean;\r\n  toggleShowPlayList: Function;\r\n  playList: any[];\r\n  playmodeText: string;\r\n  currentIndex: number;\r\n  changeCurrentIndex: Function;\r\n  handleDeleteSong: Function;\r\n}\r\nconst PlayList: React.FC<IPlayListProps> = (props) => {\r\n  const { showPlayList, playList, playmodeText, currentIndex } = props;\r\n  const { toggleShowPlayList, changeCurrentIndex, handleDeleteSong } = props;\r\n  const playListWrapperRef = useRef<HTMLElement>(document.createElement('div'));\r\n  const decorateRef = useRef<HTMLDivElement>(null);\r\n  const playListRef = useRef<HTMLUListElement>(document.createElement('ul'));\r\n  const transform = prefixStyle('transform');\r\n\r\n  const EnterAnimation = () => {\r\n    playListWrapperRef.current.style.display = 'block';\r\n    let animation = {\r\n      0: {\r\n        transform: `translate3d(0, 100%, 0) scale(0.8)`\r\n      },\r\n      100: {\r\n        transform: `translate3d(0, 0, 0) scale(1)`\r\n      }\r\n    };\r\n    animations.registerAnimation({\r\n      name: 'pushup',\r\n      animation,\r\n      presets: {\r\n        duration: 400,\r\n        easing: 'linear'\r\n      }\r\n    });\r\n    animations.runAnimation(playListRef.current, 'pushup');\r\n  };\r\n\r\n  const afterEnter = () => {\r\n    animations.unregisterAnimation('move');\r\n    playListRef.current.style.animation = '';\r\n  };\r\n\r\n  const leaveAnimation = () => {\r\n    playListRef.current.style.transition = `all 0.4s`;\r\n    playListRef.current.style[transform as any] = `translate3d(0, 100%, 0)`;\r\n  };\r\n\r\n  const afterLeave = () => {\r\n    playListRef.current.style.transition = '';\r\n    playListRef.current.style[transform as any] = '';\r\n    playListWrapperRef.current.style.display = 'none';\r\n  };\r\n\r\n  const RenderList = useCallback(() => {\r\n    return playList.map((item: any, index: number) => {\r\n      const liClass = classNames({\r\n        isSelect: currentIndex === index\r\n      });\r\n      return (\r\n        <li key={item.id} data-value={index} className={liClass}>\r\n          <span className=\"index\">{index + 1}</span>\r\n          <div className=\"song-item\">\r\n            <span className=\"song-name\">{item.name}</span>\r\n            <span className=\"singer-name\">\r\n              {getName(item.ar)} - {item.al.name}\r\n            </span>\r\n          </div>\r\n          <div className=\"del-btn\" onClick={(e) => handleDeleteSong(e, item)}>\r\n            <Icon icon=\"trash-alt\" />\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n  }, [playList, currentIndex]);\r\n\r\n  useEffect(() => {\r\n    if (!decorateRef.current) return;\r\n    function foo() {\r\n      toggleShowPlayList(false);\r\n    }\r\n    decorateRef.current.addEventListener('click', foo);\r\n    return () => {\r\n      if (decorateRef.current) {\r\n        decorateRef.current.removeEventListener('click', foo);\r\n      }\r\n    };\r\n  });\r\n\r\n  const handleClickSong = (e: React.MouseEvent) => {\r\n    let target = e.target as HTMLElement;\r\n    while (target.nodeType === 1 && target.tagName !== 'LI') {\r\n      target = target.parentNode as HTMLElement;\r\n    }\r\n    changeCurrentIndex(Number(target.getAttribute('data-value')));\r\n  };\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={showPlayList}\r\n      classNames=\"playlist-fade\"\r\n      nodeRef={playListWrapperRef}\r\n      timeout={400}\r\n      mountOnEnter\r\n      onEnter={EnterAnimation}\r\n      onEntered={afterEnter}\r\n      onExit={leaveAnimation}\r\n      onExited={afterLeave}\r\n    >\r\n      <section className=\"playlist-container\" ref={playListWrapperRef}>\r\n        <div className=\"modal-decorate\" ref={decorateRef} />\r\n        <div className=\"playlist-scroll\">\r\n          <Scroll>\r\n            <ul className=\"list-wrapper\" ref={playListRef} onClick={(e) => handleClickSong(e)}>\r\n              <p>{playmodeText}</p>\r\n              {RenderList()}\r\n            </ul>\r\n          </Scroll>\r\n        </div>\r\n      </section>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default React.memo(PlayList);\r\n","/*\r\n * @Date: 2021-12-08 10:43:32\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-17 15:16:18\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\services\\playerApi.ts\r\n */\r\nimport { AxiosPromise } from 'axios';\r\nimport Request from '.';\r\n\r\ninterface ILyricReqParams {\r\n  id: number;\r\n}\r\ninterface Tlrc {\r\n  lyric: string;\r\n}\r\nexport interface ILyricRES {\r\n  lrc: Tlrc;\r\n}\r\n\r\nexport const getLyricReq = (params: ILyricReqParams): AxiosPromise<ILyricRES> => {\r\n  return Request.request({\r\n    url: `/lyric`,\r\n    params: params\r\n  });\r\n};\r\n\r\nexport interface ISongDetailRes {\r\n  songs: any[];\r\n}\r\nexport const getSongDetailRequest = (id: string): AxiosPromise<ISongDetailRes> => {\r\n  return Request.request({\r\n    url: '/song/detail',\r\n    params: {\r\n      ids: id\r\n    }\r\n  });\r\n};\r\n","/*\r\n * @Date: 2021-11-29 10:25:08\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-17 15:20:24\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Player\\store\\sagas.ts\r\n */\r\nimport { takeLatest, call, put, select } from '@redux-saga/core/effects';\r\nimport { IApplicationState } from '../../../store/reducers';\r\nimport * as ActionType from './constans';\r\nimport { Action } from 'redux';\r\nimport { ICOMMONACTION } from '../../../utils/common_interface';\r\nimport { IPlayerState, EPlayMode } from './reducer';\r\nimport { findCurrentIndex, shuffle } from '../../../utils/tools';\r\nimport {\r\n  getLyricReq,\r\n  ILyricRES,\r\n  getSongDetailRequest,\r\n  ISongDetailRes\r\n} from '../../../services/playerApi';\r\nimport LyricFormater from '../../../utils/lyric-creator';\r\n\r\nfunction* changePlaymode(action: ICOMMONACTION) {\r\n  const { type, payload: mode } = action;\r\n  const Player: IPlayerState = yield select((state) => state.Player);\r\n  const { sequencePlayList, currentSong, currentIndex } = Player;\r\n  try {\r\n    switch (mode) {\r\n      case EPlayMode.sequence: {\r\n        yield put({ type: ActionType.SET_PLAYLIST, payload: sequencePlayList });\r\n        const index = findCurrentIndex(currentSong, sequencePlayList);\r\n        yield put({ type: ActionType.SET_CURRENT_INDEX, payload: index });\r\n        yield put({ type: ActionType.SET_PLAYMODE_TEXT, payload: '顺序播放' });\r\n        break;\r\n      }\r\n      case EPlayMode.loop: {\r\n        const newList = sequencePlayList.filter((_, index) => index === currentIndex);\r\n        yield put({ type: ActionType.SET_PLAYLIST, payload: newList });\r\n        yield put({ type: ActionType.SET_CURRENT_INDEX, payload: 0 });\r\n        yield put({ type: ActionType.SET_PLAYMODE_TEXT, payload: '单曲循环' });\r\n        break;\r\n      }\r\n      case EPlayMode.random: {\r\n        const newList = shuffle(sequencePlayList);\r\n        const index = findCurrentIndex(currentSong, newList);\r\n        yield put({ type: ActionType.SET_PLAYLIST, payload: newList });\r\n        yield put({ type: ActionType.SET_CURRENT_INDEX, payload: index });\r\n        yield put({ type: ActionType.SET_PLAYMODE_TEXT, payload: '随机播放' });\r\n        break;\r\n      }\r\n      default:\r\n        yield put({ type: ActionType.SET_PLAYMODE_TEXT, payload: '切换失败' });\r\n        console.error('切换失败');\r\n        break;\r\n    }\r\n    yield put({ type: ActionType.SET_PLAY_MODE, payload: mode });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction* addSongToList(action: ICOMMONACTION) {\r\n  const { payload } = action;\r\n  const Player: IPlayerState = yield select((state) => state.Player);\r\n  const { sequencePlayList, playList } = Player;\r\n  let newSequenceList;\r\n  let newPlayList;\r\n  let currentSong;\r\n  if (payload instanceof Array) {\r\n    newSequenceList = [...sequencePlayList, ...payload];\r\n    newPlayList = [...payload, ...playList];\r\n    currentSong = payload[0];\r\n  } else {\r\n    newSequenceList = [...sequencePlayList, payload];\r\n    newPlayList = [payload, ...playList];\r\n    currentSong = payload;\r\n  }\r\n  yield put({ type: ActionType.SET_SEQUECE_PLAYLIST, payload: newSequenceList });\r\n  yield put({ type: ActionType.SET_PLAYLIST, payload: newPlayList });\r\n  yield put({ type: ActionType.SET_CURRENT_INDEX, payload: 0 });\r\n  yield put({ type: ActionType.SET_CURRENT_SONG, payload: currentSong });\r\n}\r\n\r\nfunction* getLyric(action: ICOMMONACTION): Generator<any> {\r\n  const { payload } = action;\r\n  const { lrc } = (yield call(getLyricReq, payload)) as ILyricRES;\r\n  const { lyric } = lrc;\r\n  yield put({ type: ActionType.SAVE_LYRIC, payload: lyric });\r\n  // const a = new LyricFormater(lyric, () => {});\r\n}\r\n\r\nfunction* getSongDetail(action: ICOMMONACTION) {\r\n  try {\r\n    const { payload } = action;\r\n    const { songs } = (yield call(getSongDetailRequest, payload)) as ISongDetailRes;\r\n    yield put({ type: ActionType.INSERT_SONG, payload: songs[0] });\r\n  } catch (error) {}\r\n}\r\n\r\nexport default function* () {\r\n  yield takeLatest(ActionType.CHANGE_PLAYMODE, changePlaymode);\r\n  yield takeLatest(ActionType.ADD_CURRENT_SONG, addSongToList);\r\n  yield takeLatest(ActionType.GET_LYRIC, getLyric);\r\n  yield takeLatest(ActionType.GET_SONG_DETAIL, getSongDetail);\r\n}\r\n","/*\r\n * @Author: Censwin\r\n * @Date: 2021-11-28 11:35:22\r\n * @LastEditTime: 2022-01-07 10:54:03\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Player\\index.tsx\r\n */\r\nimport { abort } from 'process';\r\nimport React, { useRef, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IApplicationState } from '../../store/reducers';\r\nimport LyricFormater from '../../utils/lyric-creator';\r\nimport { createSongUrl, isEmptyObject } from '../../utils/tools';\r\nimport NormalPlayer from './component/normalPlayer';\r\nimport PlayList from './component/playList';\r\nimport { EPlayMode } from './store';\r\nimport * as ActionType from './store/constans';\r\nconst Player = () => {\r\n  const [currentTime, setCurrentTime] = useState(0); // 当前时间\r\n  const [durationTime, setDurationTime] = useState(0); // 总时长\r\n  const [currentPlayingLyric, setPlayingLyric] = useState('');\r\n  let ProgressPercent = currentTime / durationTime;\r\n  const dispatch = useDispatch();\r\n  const audioRef = useRef<HTMLAudioElement>(document.createElement('audio'));\r\n  const songReady = useRef(true);\r\n  const LyricRef = useRef<any>(null); // 歌词类的实例对象\r\n  const currentLineRef = useRef(-1); // 当前行\r\n  const {\r\n    isFullScreen,\r\n    playing,\r\n    sequencePlayList,\r\n    playList,\r\n    playmode,\r\n    currentIndex,\r\n    showPlayList,\r\n    currentSong,\r\n    playmodeText,\r\n    lrc\r\n  } = useSelector((state: IApplicationState) => state.Player);\r\n\r\n  const changePlayingState = (state: boolean) => {\r\n    dispatch({ type: ActionType.SET_PLAYING_STATE, payload: state });\r\n\r\n    if (LyricRef.current) {\r\n      LyricRef.current.togglePlay(currentTime * 1000);\r\n    }\r\n  };\r\n\r\n  const onProgressChange = (percent: number) => {\r\n    const newTime = percent * durationTime;\r\n    audioRef.current.currentTime = newTime;\r\n    setCurrentTime(newTime);\r\n    if (!playing) {\r\n      changePlayingState(true);\r\n    }\r\n    if (LyricRef.current) {\r\n      LyricRef.current.ProgressControl(newTime * 1000);\r\n    }\r\n  };\r\n\r\n  const resetAudioTime = () => {\r\n    audioRef.current.currentTime = 0;\r\n  };\r\n\r\n  const lastSong = () => {\r\n    if (currentIndex <= 0) return;\r\n    if (playmode === EPlayMode.loop) {\r\n      resetAudioTime();\r\n      return;\r\n    }\r\n    const newIndex = currentIndex - 1;\r\n    changeCurrentIndex(newIndex);\r\n    if (!playing) changePlayingState(true);\r\n  };\r\n\r\n  const nextSong = () => {\r\n    if (playmode === EPlayMode.loop) {\r\n      resetAudioTime();\r\n      return;\r\n    }\r\n    if (playList.length === 1) {\r\n      changePlayingState(false);\r\n      return;\r\n    }\r\n    let newIndex = (currentIndex + 1) % playList.length;\r\n    changeCurrentIndex(newIndex);\r\n    if (!playing) changePlayingState(true);\r\n  };\r\n\r\n  const handleError = () => {\r\n    songReady.current = true;\r\n    console.log('播放出错');\r\n  };\r\n\r\n  const changeCurrentIndex = (index: number) => {\r\n    dispatch({ type: ActionType.SET_CURRENT_INDEX, payload: index });\r\n    dispatch({ type: ActionType.SET_CURRENT_SONG, payload: playList[index] });\r\n  };\r\n\r\n  const handleChangeMode = () => {\r\n    let mode = (playmode + 1) % 3;\r\n    dispatch({ type: ActionType.CHANGE_PLAYMODE, payload: mode });\r\n  };\r\n  const toggleFullScreen = (status: boolean) => {\r\n    dispatch({ type: ActionType.SET_ISFULL_SCREEN, payload: status });\r\n  };\r\n  const toggleShowPlayList = (status: boolean) => {\r\n    dispatch({ type: ActionType.SET_SHOW_PLAYLIST, payload: status });\r\n  };\r\n\r\n  const getSongLyric = (id: number) => {\r\n    dispatch({ type: ActionType.GET_LYRIC, payload: { id } });\r\n    if (LyricRef.current) {\r\n      LyricRef.current.stop();\r\n    }\r\n  };\r\n  // type TlyricCallBack = () => void\r\n  interface ILParams {\r\n    lineIndex: number;\r\n    text: string;\r\n  }\r\n  const lyricCallBack = ({ lineIndex, text }: ILParams) => {\r\n    if (!LyricRef.current) return;\r\n    currentLineRef.current = lineIndex;\r\n    setPlayingLyric(text);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!lrc) {\r\n      LyricRef.current = null;\r\n    } else {\r\n      LyricRef.current = new LyricFormater(lrc, lyricCallBack);\r\n      // LyricRef.current.play();\r\n      currentLineRef.current = 0;\r\n      LyricRef.current.ProgressControl(0);\r\n      if (!playing) {\r\n        LyricRef.current.stop();\r\n      }\r\n    }\r\n  }, [lrc]);\r\n\r\n  type audioState = 'play' | 'pause';\r\n  const audioControler = (state: audioState) => {\r\n    if (state === 'play') {\r\n      audioRef.current\r\n        .play()\r\n        .then(() => {\r\n          songReady.current = true;\r\n          changePlayingState(true);\r\n          console.log('audio played auto');\r\n        })\r\n        .catch((error) => {\r\n          console.log('audio error:', error);\r\n          changePlayingState(false);\r\n        });\r\n    } else {\r\n      audioRef.current.pause();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!currentSong) return;\r\n    if (playList.length !== 0) {\r\n      changeCurrentIndex(0);\r\n    }\r\n    // dispatch({ type: ActionType.SET_SHOW_PLAYLIST, payload: true });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!playList.length || currentIndex === -1 || !songReady.current) return;\r\n    const item = playList[currentIndex];\r\n    songReady.current = false;\r\n    const songUrl = createSongUrl(item.id);\r\n    audioRef.current.src = songUrl;\r\n    setTimeout(() => {\r\n      audioControler('play');\r\n    });\r\n    changePlayingState(true);\r\n    setCurrentTime(0);\r\n    setDurationTime(item.dt / 1000);\r\n    getSongLyric(item.id);\r\n  }, [playList, currentIndex]);\r\n\r\n  useEffect(() => {\r\n    if (!audioRef.current) return;\r\n    playing ? audioControler('play') : audioControler('pause');\r\n  }, [playing]);\r\n\r\n  const updateTime = (event: any) => {\r\n    setCurrentTime(event.target.currentTime);\r\n  };\r\n\r\n  const handleDeleteSong = (e: React.MouseEvent, song: any) => {\r\n    e.stopPropagation();\r\n    dispatch({ type: ActionType.DEL_CURRENT_SONG, payload: { id: song.id } });\r\n  };\r\n\r\n  const NormalPlayerProps = {\r\n    song: currentSong,\r\n    isFullScreen: isFullScreen,\r\n    toggleFullScreen,\r\n    playing,\r\n    handleClickPlay: changePlayingState,\r\n    ProgressPercent,\r\n    currentTime,\r\n    durationTime,\r\n    onProgressChange,\r\n    lastSong,\r\n    nextSong,\r\n    handleChangeMode,\r\n    playmode,\r\n    showPlayList,\r\n    toggleShowPlayList,\r\n    currentPlayingLyric: currentPlayingLyric,\r\n    currentLyric: LyricRef.current,\r\n    currentLineNum: currentLineRef.current\r\n  };\r\n\r\n  const PlayListProps = {\r\n    showPlayList,\r\n    toggleShowPlayList,\r\n    playList,\r\n    playmodeText,\r\n    currentIndex,\r\n    changeCurrentIndex,\r\n    handleDeleteSong\r\n  };\r\n\r\n  return (\r\n    <section className=\"player-container\">\r\n      <PlayList {...PlayListProps} />\r\n      {!isEmptyObject(currentSong) && <NormalPlayer {...NormalPlayerProps} />}\r\n      <audio\r\n        id=\"my_audio\"\r\n        ref={audioRef}\r\n        onTimeUpdate={updateTime}\r\n        onEnded={nextSong}\r\n        onError={handleError}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default React.memo(Player);\r\n","/*\r\n * @Author: Censwin\r\n * @Date: 2021-10-28 23:23:22\r\n * @LastEditTime: 2022-01-07 14:09:27\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Home\\index.tsx\r\n */\r\nimport React, { ReactNode, useCallback } from 'react';\r\nimport { renderRoutes, RouteConfig } from 'react-router-config';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Icon, Spin } from '../../components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Player from './../Player';\r\nimport { IApplicationState } from '../../store/reducers';\r\nimport classNames from 'classnames';\r\nimport { isEmptyObject } from '../../utils/tools';\r\ninterface IHomeProps extends RouteConfig {\r\n  id?: string;\r\n}\r\nconst Home: React.FC<IHomeProps> = (props) => {\r\n  const { route } = props;\r\n  const dispatch = useDispatch();\r\n  const { currentSong, playing } = useSelector((state: IApplicationState) => state.Player);\r\n  const { Global_Loading } = useSelector((state: IApplicationState) => state.Home);\r\n  const handleClick = () => {\r\n    dispatch({ type: 'TEST' });\r\n  };\r\n  const CD_PIC_CLASSES = classNames('cd-image', {\r\n    play: playing,\r\n    pause: !playing\r\n  });\r\n  const handleOpenPlayer = useCallback(() => {\r\n    dispatch({ type: 'player/SET_ISFULL_SCREEN', payload: true });\r\n  }, []);\r\n  return (\r\n    <div className=\"home-container\">\r\n      {Global_Loading && <Spin />}\r\n      {renderRoutes(route.routes)}\r\n      <Player />\r\n      <div className=\"home-footer\">\r\n        <NavLink to=\"/discover\" activeClassName=\"RouterActive\">\r\n          <div className=\"tab-item\">\r\n            <Icon icon=\"compass\" />\r\n            <span>发现</span>\r\n          </div>\r\n        </NavLink>\r\n        <div className=\"CD-wrapper\" onClick={handleOpenPlayer}>\r\n          <div className=\"img-wrapper\">\r\n            {!isEmptyObject(currentSong) && (\r\n              <img\r\n                className={CD_PIC_CLASSES}\r\n                src={currentSong.al.picUrl + '?param=400x400'}\r\n                alt=\"\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <NavLink to=\"/mine\" activeClassName=\"RouterActive\">\r\n          <div className=\"tab-item\">\r\n            <Icon icon=\"mitten\" />\r\n            <span>我的</span>\r\n          </div>\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Home);\r\n","/*\r\n * @Author: Censwin\r\n * @Date: 2021-10-28 23:23:22\r\n * @LastEditTime: 2021-12-29 17:19:29\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\routes\\index.tsx\r\n */\r\nimport React, { Component, Suspense, lazy } from 'react';\r\n\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Home from '../application/Home';\r\n// import Discover from '../application/Discover';\r\n// import Recommend from '../application/Recommend';\r\n// import Album from '../application/Album';\r\n// import Rank from '../application/Rank';\r\n// import Search from '../application/Search';\r\n// import Singer from '../application/Singer';\r\n// const Home = lazy(() => import('../application/Home'));\r\nconst Discover = lazy(() => import('../application/Discover'));\r\nconst Recommend = lazy(() => import('../application/Recommend'));\r\nconst Album = lazy(() => import('../application/Album'));\r\nconst Rank = lazy(() => import('../application/Rank'));\r\nconst Search = lazy(() => import('../application/Search'));\r\nconst Singer = lazy(() => import('../application/Singer'));\r\n\r\nconst SuspenseComponent = (Component: any) => (props: any) =>\r\n  (\r\n    <Suspense fallback=\"\">\r\n      <Component {...props} />\r\n    </Suspense>\r\n  );\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    component: Home,\r\n    routes: [\r\n      {\r\n        path: '/',\r\n        exact: true,\r\n        render: () => <Redirect to=\"/discover\" />\r\n      },\r\n      {\r\n        path: '/discover',\r\n        exact: true,\r\n        component: SuspenseComponent(Discover)\r\n      },\r\n      {\r\n        path: '/recommend',\r\n        exact: true,\r\n        component: SuspenseComponent(Recommend)\r\n      },\r\n      {\r\n        path: '/rank',\r\n        exact: true,\r\n        component: SuspenseComponent(Rank)\r\n      },\r\n      {\r\n        path: '/album/:id',\r\n        exact: true,\r\n        key: 'album',\r\n        component: SuspenseComponent(Album)\r\n      },\r\n      {\r\n        path: '/search',\r\n        exact: true,\r\n        key: 'search',\r\n        component: SuspenseComponent(Search)\r\n      },\r\n      {\r\n        path: '/singers/:id',\r\n        exact: true,\r\n        component: SuspenseComponent(Singer)\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default routes;\r\n","/*\r\n * @Date: 2022-01-07 13:55:45\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2022-01-07 13:56:22\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Home\\store\\constans.ts\r\n */\r\nexport const CHANGE_GLOBAL_LOADING = 'global/CHANGE_GLOBAL_LOADING';\r\n","/*\r\n * @Author: Censwin\r\n * @Date: 2021-10-30 17:51:21\r\n * @LastEditTime: 2022-01-07 14:00:52\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Home\\store\\reducer.ts\r\n */\r\nimport { Reducer } from 'redux';\r\nimport produce, { Draft } from 'immer';\r\nimport * as ActionType from './constans';\r\nexport interface IHomeState {\r\n  Global_Loading: Boolean;\r\n}\r\nconst defaultState: IHomeState = {\r\n  Global_Loading: false\r\n};\r\n\r\nconst HomeReducer: Reducer = (state = defaultState, action) => {\r\n  return produce(state, (draft: Draft<IHomeState>) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case ActionType.CHANGE_GLOBAL_LOADING:\r\n        draft.Global_Loading = payload;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default HomeReducer;\r\n","/*\r\n * @Date: 2021-11-24 10:05:01\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-11-24 10:16:40\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\services\\albumApi.ts\r\n */\r\nimport Request from './index';\r\nimport { AxiosPromise } from 'axios';\r\n\r\nexport interface IAlbumDetailParams {\r\n  id: number;\r\n}\r\nexport interface IAlbumDetailRes {\r\n  playlist: any[];\r\n}\r\n\r\nexport const getAlbumDetail = (params: IAlbumDetailParams): AxiosPromise<IAlbumDetailRes> => {\r\n  return Request.request({\r\n    url: '/playlist/detail',\r\n    params: params\r\n  });\r\n};\r\n","/*\r\n * @Date: 2021-11-19 17:36:37\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2022-01-07 14:25:11\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Album\\store\\sagas.ts\r\n */\r\nimport { takeLatest, call, put } from '@redux-saga/core/effects';\r\nimport * as ActionTypes from './constants';\r\nimport { IAlbumDetailRes, getAlbumDetail, IAlbumDetailParams } from '../../../services/albumApi';\r\nimport { Action } from 'redux';\r\n\r\ninterface AlbumDetailAction extends Action {\r\n  payload: IAlbumDetailParams;\r\n}\r\nfunction* fetchAlbumDetail(action: AlbumDetailAction) {\r\n  const { payload } = action;\r\n\r\n  yield put({ type: 'global/CHANGE_GLOBAL_LOADING', payload: true });\r\n  try {\r\n    const { playlist } = (yield call(getAlbumDetail, payload)) as IAlbumDetailRes;\r\n    yield put({ type: ActionTypes.SAVE_ALBUMDETAIL, payload: playlist });\r\n    yield put({ type: 'global/CHANGE_GLOBAL_LOADING', payload: false });\r\n  } catch (error) {\r\n    console.error(error);\r\n\r\n    yield put({ type: 'global/CHANGE_GLOBAL_LOADING', payload: false });\r\n  }\r\n}\r\n\r\nexport default function* () {\r\n  yield takeLatest(ActionTypes.GET_ALBUMDETAIL, fetchAlbumDetail);\r\n}\r\n","/*\r\n * @Date: 2021-11-19 17:16:10\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-11-24 11:44:09\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Album\\store\\reducer.ts\r\n */\r\nimport { Reducer } from 'redux';\r\nimport produce, { Draft } from 'immer';\r\nimport * as ActionTypes from './constants';\r\nexport interface IAlbumState {\r\n  playList: any[];\r\n  currentAlbum: any;\r\n}\r\nconst defaultState: IAlbumState = {\r\n  playList: [],\r\n  currentAlbum: {}\r\n};\r\n\r\nconst AlbumReducer: Reducer<IAlbumState> = (state = defaultState, action) => {\r\n  return produce(state, (draft: Draft<IAlbumState>) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case ActionTypes.SAVE_ALBUMDETAIL:\r\n        draft.currentAlbum = payload;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default AlbumReducer;\r\n","/*\r\n * @Date: 2021-11-25 14:21:44\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-11-25 16:25:21\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\services\\rankApi.ts\r\n */\r\nimport Request from './index';\r\nimport { AxiosPromise } from 'axios';\r\n\r\nexport const getRankList = () => {\r\n  return Request.request({\r\n    url: `/toplist/detail`\r\n  });\r\n};\r\n","/*\r\n * @Date: 2021-11-25 11:31:57\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2022-01-07 14:12:32\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Rank\\store\\sagas.ts\r\n */\r\nimport { takeLatest, call, put } from '@redux-saga/core/effects';\r\nimport * as ActionType from './constans';\r\nimport { Action } from 'redux';\r\nimport { getRankList } from '../../../services/rankApi';\r\n\r\nfunction* fetchRankList() {\r\n  yield put({ type: 'global/CHANGE_GLOBAL_LOADING', payload: true });\r\n  try {\r\n    const { list } = yield call(getRankList);\r\n    yield put({ type: ActionType.SAVE_RANKLIST, payload: list });\r\n    yield put({ type: 'global/CHANGE_GLOBAL_LOADING', payload: false });\r\n  } catch (error) {\r\n    console.error(error);\r\n    yield put({ type: 'global/CHANGE_GLOBAL_LOADING', payload: false });\r\n  }\r\n}\r\n\r\nexport default function* () {\r\n  yield takeLatest(ActionType.GET_RANKLIST, fetchRankList);\r\n}\r\n","/*\r\n * @Date: 2021-11-24 18:05:04\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-11-25 17:08:50\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Rank\\store\\reducer.ts\r\n */\r\nimport { Reducer } from 'redux';\r\nimport produce, { Draft } from 'immer';\r\nimport * as ActionType from './constans';\r\nexport interface IRankState {\r\n  rankList: any[];\r\n}\r\n\r\nconst defaultState: IRankState = {\r\n  rankList: []\r\n};\r\n\r\nconst RankReducer: Reducer<IRankState> = (state = defaultState, action) => {\r\n  return produce(state, (draft: Draft<IRankState>) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case ActionType.SAVE_RANKLIST:\r\n        draft.rankList = payload;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default RankReducer;\r\n","/*\r\n * @Date: 2021-12-13 11:24:45\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-29 16:36:48\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\services\\searchApi.ts\r\n */\r\nimport { AxiosPromise } from 'axios';\r\nimport Request from './index';\r\n\r\nexport interface IHotkeysRes {\r\n  result: {\r\n    hots: any[];\r\n  };\r\n}\r\nexport const getHotKeysRequest = (): AxiosPromise<IHotkeysRes> => {\r\n  return Request.request({\r\n    url: '/search/hot'\r\n  });\r\n};\r\n\r\nexport interface ISuggest {\r\n  albums?: { id: number; name: string }[]; // 专辑：// 信息不完整\r\n  artists?: { id: number; name: string; picUrl: string }[]; // 歌手信息\r\n  order?: string[]; // 标签如：  [\"songs\", \"artists\", \"albums\", \"playlists\"]\r\n  playlists?: { id: number; name: string; playCount: number; coverImgUrl: string }[]; // 歌单\r\n  songs?: any[]; // 歌曲：信息不完整\r\n}\r\nexport interface ISuggestRes {\r\n  result: ISuggest;\r\n}\r\nexport const getSuggestListRequest = (value: string): AxiosPromise<ISuggestRes> => {\r\n  return Request.request({\r\n    url: '/search/suggest',\r\n    params: {\r\n      keywords: value\r\n    }\r\n  });\r\n};\r\n\r\nexport interface ISearchRes {\r\n  result: {\r\n    songs: any[];\r\n  };\r\n}\r\nexport const getSearchResultRequest = (value: string): AxiosPromise<ISearchRes> => {\r\n  return Request.request({\r\n    url: '/search',\r\n    params: {\r\n      keywords: value\r\n    }\r\n  });\r\n};\r\n","/*\r\n * @Date: 2021-12-13 11:08:33\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2022-01-07 14:32:18\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Search\\store\\sagas.ts\r\n */\r\nimport { call, put, takeLatest, SagaReturnType, all } from '@redux-saga/core/effects';\r\nimport {\r\n  getHotKeysRequest,\r\n  getSearchResultRequest,\r\n  getSuggestListRequest,\r\n  IHotkeysRes,\r\n  ISearchRes,\r\n  ISuggestRes\r\n} from '../../../services/searchApi';\r\nimport { ICOMMONACTION } from '../../../utils/common_interface';\r\nimport { isEmptyObject } from '../../../utils/tools';\r\nimport * as ActionType from './constants';\r\n\r\nfunction* getHotKeys() {\r\n  yield put({ type: 'global/CHANGE_GLOBAL_LOADING', payload: true });\r\n  try {\r\n    const { result } = (yield call(getHotKeysRequest)) as IHotkeysRes;\r\n    const { hots } = result;\r\n    yield put({ type: ActionType.SET_HOT_KEYWRODS, payload: hots });\r\n    yield put({ type: 'global/CHANGE_GLOBAL_LOADING', payload: false });\r\n  } catch (error) {\r\n    yield put({ type: 'global/CHANGE_GLOBAL_LOADING', payload: false });\r\n  }\r\n}\r\n\r\nfunction* search(action: ICOMMONACTION) {\r\n  yield put({ type: 'global/CHANGE_GLOBAL_LOADING', payload: true });\r\n  try {\r\n    const { payload } = action;\r\n    const [suggests, songs]: [ISuggestRes, ISearchRes] = yield all([\r\n      call(getSuggestListRequest, payload),\r\n      call(getSearchResultRequest, payload)\r\n    ]);\r\n    // 有些歌手suggests会返回空对象导致没有标签，原因不明,写死一个以免一片空白\r\n    let suggestsObj = suggests.result;\r\n    if (isEmptyObject(suggests.result)) {\r\n      suggestsObj = {\r\n        order: ['songs']\r\n      };\r\n    }\r\n    yield put({ type: ActionType.SET_SUGGEST_LIST, payload: suggestsObj });\r\n    yield put({ type: ActionType.SET_RESULT_SONGS_LIST, payload: songs.result.songs });\r\n    yield put({ type: 'global/CHANGE_GLOBAL_LOADING', payload: false });\r\n  } catch (error) {\r\n    yield put({ type: 'global/CHANGE_GLOBAL_LOADING', payload: false });\r\n  }\r\n}\r\n\r\nexport default function* () {\r\n  yield takeLatest(ActionType.GET_HOT_KEYWRODS, getHotKeys);\r\n  yield takeLatest(ActionType.SEARCH_KEYWORD, search);\r\n}\r\n","/*\r\n * @Date: 2021-12-13 11:09:43\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-29 16:38:03\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Search\\store\\reducer.ts\r\n */\r\nimport produce, { Draft } from 'immer';\r\nimport { Reducer } from 'redux';\r\nimport { getResOrderLable } from '../../../utils/tools';\r\nimport * as ActionType from './constants';\r\n// import { temp1, temp2 } from './temp';\r\nimport type { ISuggest } from '../../../services/searchApi';\r\nexport interface ISearchState {\r\n  hotKeyList: any[];\r\n  suggestObject: ISuggest;\r\n  songsList: any[];\r\n  enterLoading: boolean;\r\n}\r\n\r\nconst defaultState = {\r\n  hotKeyList: [],\r\n  suggestObject: {}, // 列表歌单和歌手\r\n  songsList: [], // 歌曲列表\r\n  enterLoading: false\r\n};\r\n\r\nconst SearchReducer: Reducer<ISearchState> = (state = defaultState, action) => {\r\n  return produce(state, (draft: Draft<ISearchState>) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case ActionType.SET_ENTER_LOADING:\r\n        draft.enterLoading = payload;\r\n        break;\r\n      case ActionType.SET_HOT_KEYWRODS:\r\n        draft.hotKeyList = payload;\r\n        break;\r\n      case ActionType.SET_RESULT_SONGS_LIST:\r\n        draft.songsList = payload;\r\n        break;\r\n      case ActionType.SET_SUGGEST_LIST:\r\n        draft.suggestObject = payload;\r\n        draft.suggestObject.order = getResOrderLable(draft.suggestObject.order as string[]);\r\n        break;\r\n      case ActionType.CLEAR_DATA:\r\n        draft.suggestObject = {};\r\n        draft.songsList = [];\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default SearchReducer;\r\n","/*\r\n * @Date: 2021-12-29 14:52:44\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-29 14:56:26\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\services\\singerApi.ts\r\n */\r\nimport Request from './index';\r\nimport { AxiosPromise } from 'axios';\r\n\r\nexport interface ISingerDataRes {\r\n  artist: any;\r\n  hotSongs: any[];\r\n}\r\n\r\nexport const getSingerDataReq = (params: { id: number }): AxiosPromise<ISingerDataRes> => {\r\n  return Request.request({\r\n    url: '/artists',\r\n    params\r\n  });\r\n};\r\n","/*\r\n * @Date: 2021-12-29 14:34:41\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2022-01-07 14:28:23\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Singer\\store\\sagas.ts\r\n */\r\nimport { call, put, takeLatest, all } from '@redux-saga/core/effects';\r\nimport { getSingerDataReq } from '../../../services/singerApi';\r\nimport type { ISingerDataRes } from '../../../services/singerApi';\r\nimport { ICOMMONACTION } from '../../../utils/common_interface';\r\nimport * as ActionType from './constants';\r\n\r\nfunction* getSingerData(action: ICOMMONACTION) {\r\n  try {\r\n    yield put({ type: 'global/CHANGE_GLOBAL_LOADING', payload: true });\r\n    const { payload } = action;\r\n    const { artist, hotSongs } = (yield call(getSingerDataReq, payload)) as ISingerDataRes;\r\n    yield put({ type: ActionType.CHANGE_SINGER, payload: artist });\r\n    yield put({ type: ActionType.CHANGE_SONGS_OF_SINGER, payload: hotSongs });\r\n    yield put({ type: 'global/CHANGE_GLOBAL_LOADING', payload: false });\r\n  } catch (error) {}\r\n}\r\n\r\nexport default function* () {\r\n  yield takeLatest(ActionType.GET_SINGER, getSingerData);\r\n}\r\n","/*\r\n * @Date: 2021-12-29 14:40:13\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-29 15:08:37\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Singer\\store\\reducer.ts\r\n */\r\nimport produce, { Draft } from 'immer';\r\nimport { Reducer } from 'redux';\r\nimport * as ActionType from './constants';\r\n\r\nexport interface ISingerState {\r\n  artist: any;\r\n  songsOfArtist: any[];\r\n}\r\n\r\nconst defaultState = {\r\n  artist: {},\r\n  songsOfArtist: []\r\n};\r\n\r\nconst SingerReducer: Reducer<ISingerState> = (state = defaultState, action) => {\r\n  return produce(state, (draft: Draft<ISingerState>) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case ActionType.CHANGE_SINGER:\r\n        draft.artist = payload;\r\n        break;\r\n      case ActionType.CHANGE_SONGS_OF_SINGER:\r\n        draft.songsOfArtist = payload;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default SingerReducer;\r\n","/*\r\n * @Author: Censwin\r\n * @Date: 2021-10-30 17:12:13\r\n * @LastEditTime: 2021-12-13 11:19:16\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\store\\reducers.ts\r\n */\r\n\r\nimport { combineReducers } from 'redux';\r\nimport HomeReducer, { IHomeState } from './../application/Home/store/reducer';\r\nimport { reducer as DiscoverReducer, IDiscoverState } from './../application/Discover/store';\r\nimport { reducer as RecommendReducer, IRcomendState } from './../application/Recommend/store';\r\nimport { reducer as AlbumReducer, IAlbumState } from './../application/Album/store';\r\nimport { reducer as RankReducer, IRankState } from './../application/Rank/store';\r\nimport { reducer as PlayerReducer, IPlayerState } from './../application/Player/store';\r\nimport { reducer as SearchReducer, ISearchState } from './../application/Search/store';\r\nimport { reducer as SingerReducer, ISingerState } from './../application/Singer/store';\r\n\r\nexport const RootReducers = combineReducers({\r\n  Home: HomeReducer,\r\n  Discover: DiscoverReducer,\r\n  Recommend: RecommendReducer,\r\n  Album: AlbumReducer,\r\n  Rank: RankReducer,\r\n  Player: PlayerReducer,\r\n  Search: SearchReducer,\r\n  Singer: SingerReducer\r\n});\r\n\r\nexport interface IApplicationState {\r\n  Home: IHomeState;\r\n  Discover: IDiscoverState;\r\n  Recommend: IRcomendState;\r\n  Album: IAlbumState;\r\n  Rank: IRankState;\r\n  Player: IPlayerState;\r\n  Search: ISearchState;\r\n  Singer: ISingerState;\r\n}\r\n","/*\r\n * @Author: Censwin\r\n * @Date: 2021-10-30 17:34:21\r\n * @LastEditTime: 2021-11-14 17:36:25\r\n * @Description:\r\n * @FilePath: /melodia-ts/src/application/Home/store/sagas.ts\r\n */\r\n\r\nimport { takeEvery } from 'redux-saga/effects';\r\n\r\nexport function* fetchList() {\r\n  yield console.log('success');\r\n}\r\n\r\nexport default function* watchGetList() {\r\n  yield takeEvery('TEST', fetchList);\r\n}\r\n","/*\r\n * @Author: Censwin\r\n * @Date: 2021-10-30 17:34:29\r\n * @LastEditTime: 2021-10-31 14:29:48\r\n * @Description:\r\n * @FilePath: /melodia-ts/src/application/Home/store/index.ts\r\n */\r\nimport { all } from '@redux-saga/core/effects';\r\nimport homeSaga from './sagas';\r\n\r\nexport default function* rootSaga() {\r\n    yield all([homeSaga()]);\r\n}\r\n","/*\r\n * @Author: Censwin\r\n * @Date: 2021-10-30 17:32:01\r\n * @LastEditTime: 2021-12-29 14:59:54\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\store\\sagas.ts\r\n */\r\nimport { all } from 'redux-saga/effects';\r\nimport HomeSagas from '../application/Home/store';\r\nimport { sagas as DiscoverSagas } from '../application/Discover/store';\r\nimport { sagas as RecommendSagas } from '../application/Recommend/store';\r\nimport { sagas as AlbumSagas } from '../application/Album/store';\r\nimport { sagas as RankSagas } from '../application/Rank/store';\r\nimport { sagas as PlayerSagas } from '../application/Player/store';\r\nimport { sagas as SearchSagas } from '../application/Search/store';\r\nimport { sagas as SingerSagas } from '../application/Singer/store';\r\n\r\nexport default function* rootSagas() {\r\n  yield all([\r\n    HomeSagas(),\r\n    DiscoverSagas(),\r\n    RecommendSagas(),\r\n    AlbumSagas(),\r\n    RankSagas(),\r\n    PlayerSagas(),\r\n    SearchSagas(),\r\n    SingerSagas()\r\n  ]);\r\n}\r\n","/*\r\n * @Author: Censwin\r\n * @Date: 2021-10-30 17:11:50\r\n * @LastEditTime: 2021-10-31 14:52:29\r\n * @Description:\r\n * @FilePath: /melodia-ts/src/store/index.ts\r\n */\r\nimport createSagaMiddleware from '@redux-saga/core';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { RootReducers } from './reducers';\r\nimport rootSagas from './sagas';\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst composed = compose(applyMiddleware(sagaMiddleware));\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(RootReducers, composeEnhancers(composed));\r\nsagaMiddleware.run(rootSagas);\r\n","/*\r\n * @Author: Censwin\r\n * @Date: 2021-10-28 23:23:22\r\n * @LastEditTime: 2021-12-17 23:25:00\r\n * @Description:\r\n * @FilePath: /melodia-ts/src/App.tsx\r\n */\r\nimport React, { useEffect, useRef } from 'react';\r\nimport './App.scss';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport routes from './routes/index';\r\nimport { renderRoutes } from 'react-router-config';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    const target = document.getElementById('root');\r\n    if (target) {\r\n      const addAndRemove = function () {\r\n        const audio: HTMLAudioElement = document.getElementById('my_audio') as HTMLAudioElement;\r\n        if (audio) {\r\n          audio\r\n            .play()\r\n            .then(() => {})\r\n            .catch((error) => {});\r\n          setTimeout(() => {\r\n            audio.pause();\r\n          }, 1);\r\n        }\r\n        setTimeout(() => {\r\n          target.removeEventListener('click', addAndRemove);\r\n        }, 1);\r\n      };\r\n      target.addEventListener('click', addAndRemove);\r\n    }\r\n  }, []);\r\n  return (\r\n    <Provider store={store}>\r\n      <HashRouter>{renderRoutes(routes)}</HashRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './styles/index.scss';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\nimport { Provider } from 'react-redux';\r\nlibrary.add(fas);\r\n// https://codesandbox.io/s/redux-saga-forked-6ookq?file=/src/index.js\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","/*\r\n * @Author: Censwin\r\n * @Date: 2021-11-14 12:09:49\r\n * @LastEditTime: 2022-01-07 15:57:18\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\utils\\request.ts\r\n */\r\nimport axios, { AxiosInstance, AxiosPromise, AxiosRequestConfig, AxiosResponse } from 'axios';\r\n\r\nlet apiBaseUrl = 'https://music-api-five.vercel.app/';\r\n\r\n// if (process.env.NODE_ENV === 'development') {\r\n//   // apiBaseUrl = 'http://localhost:3000';\r\n// } else if (process.env.NODE_ENV === 'production') {\r\n//   // apiBaseUrl = 'http://localhost:3000';\r\n// }\r\naxios.defaults.timeout = 5000;\r\nclass HttpRequest {\r\n  public baseUrl: string;\r\n  public constructor(baseUrl = apiBaseUrl) {\r\n    this.baseUrl = baseUrl;\r\n  }\r\n  public request(options: AxiosRequestConfig): AxiosPromise {\r\n    const axiosInstance: AxiosInstance = axios.create();\r\n    const _options = this.mergeOptions(options);\r\n    this.interceptors(axiosInstance, _options.url);\r\n    return axiosInstance(_options);\r\n  }\r\n  private interceptors(axiosInstance: AxiosInstance, url?: string) {\r\n    // 定义这个函数用于添加全局请求和响应拦截逻辑\r\n    axiosInstance.interceptors.request.use(\r\n      (config: AxiosRequestConfig) => {\r\n        // if token config.header.token ....\r\n        return config;\r\n      },\r\n      (error) => {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    // 返回拦截\r\n    axiosInstance.interceptors.response.use(\r\n      (res: AxiosResponse) => {\r\n        if (res.status === 200) {\r\n          const { data } = res;\r\n          if (data.code !== 200) {\r\n            console.error('请求错误:', res);\r\n          }\r\n          return res.data;\r\n        }\r\n      },\r\n      (err) => {\r\n        // throw new Error('请求错误' + err);\r\n        // console.error('请求错误: ' + err);\r\n        // return false;\r\n        return Promise.reject(err);\r\n        // return Promise.resolve(err);\r\n      }\r\n    );\r\n  }\r\n  private mergeOptions(options: AxiosRequestConfig): AxiosRequestConfig {\r\n    return { baseURL: this.baseUrl, ...options };\r\n  }\r\n}\r\nexport interface ResponseData {\r\n  code: number;\r\n  data?: any;\r\n}\r\nexport default HttpRequest;\r\n","/*\r\n * @Date: 2021-11-17 14:47:57\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-08 10:47:12\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\services\\index.ts\r\n */\r\nimport HttpRequest from '../utils/request';\r\nexport * from '../utils/request';\r\nconst Requset = new HttpRequest();\r\nexport default Requset;\r\n","/*\r\n * @Date: 2021-12-13 11:14:25\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-17 17:02:40\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Search\\store\\constants.ts\r\n */\r\nexport const SET_HOT_KEYWRODS = 'search/SET_HOT_KEYWRODS';\r\nexport const SET_SUGGEST_LIST = 'search/SET_SUGGEST_LIST';\r\nexport const SET_RESULT_SONGS_LIST = 'search/SET_RESULT_SONGS_LIST';\r\nexport const SET_ENTER_LOADING = 'search/SET_ENTER_LOADING';\r\n\r\nexport const GET_HOT_KEYWRODS = 'search/GET_HOT_KEYWRODS';\r\n\r\nexport const SEARCH_KEYWORD = 'search/SEARCH_KEYWORD';\r\n\r\nexport const CLEAR_DATA = 'search/CLEAR_DATA';\r\n","/*\r\n * @Date: 2021-12-29 14:48:40\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-29 14:50:31\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Singer\\store\\constants.ts\r\n */\r\nexport const GET_SINGER = 'singer/GET_SINGER';\r\n\r\nexport const CHANGE_SINGER = 'singer/CHANGE_SINGER';\r\nexport const CHANGE_SONGS_OF_SINGER = 'singer/CHANGE_SONGS_OF_SINGER';\r\nexport const CHANGE_ENTER_LOADING = 'singer/CHANGE_ENTER_LOADING';\r\n","/*\r\n * @Date: 2021-11-17 16:22:13\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-29 11:13:27\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\baseUI\\Header\\header.tsx\r\n */\r\nimport classNames from 'classnames';\r\nimport React, { forwardRef } from 'react';\r\nimport { Marquee } from '..';\r\nimport { Icon } from './../../components';\r\ninterface IHeaderProps {\r\n  handleClick: Function;\r\n  title: string;\r\n  rolling?: boolean;\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n}\r\n\r\nconst Header = forwardRef<HTMLDivElement, IHeaderProps>((props, ref) => {\r\n  const { title, handleClick, rolling, style, className } = props;\r\n  const classes = classNames('header-container', className);\r\n  return (\r\n    <div className={classes} onClick={() => handleClick()} style={style} ref={ref}>\r\n      <Icon className=\"header-back\" icon=\"chevron-left\" />\r\n      <div className=\"title-wrapper\">\r\n        {rolling ? <Marquee text={title} /> : <span>{title}</span>}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\n// const Header: React.FC<IHeaderProps> = (props) => {\r\n//   const { title, handleClick, rolling, style, className } = props;\r\n//   const classes = classNames('header-container', className);\r\n//   return (\r\n//     <div className={classes} onClick={() => handleClick()} style={style}>\r\n//       <Icon className=\"header-back\" icon=\"chevron-left\" />\r\n//       <div className=\"title-wrapper\">\r\n//         {rolling ? <Marquee text={title} /> : <span>{title}</span>}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nexport default React.memo(Header);\r\n","/*\r\n * @Author: Censwin\r\n * @Date: 2021-09-05 15:23:27\r\n * @LastEditTime: 2021-12-07 17:42:14\r\n * @Description: 通用滚动组件\r\n * @FilePath: \\melodia-ts\\src\\baseUI\\Scroll\\scroll.tsx\r\n */\r\nimport * as React from 'react';\r\nimport BScroll from 'better-scroll';\r\nimport classNames from 'classnames';\r\nexport interface ScrollImperativeHandle {\r\n  finishPullDown: Function;\r\n  getBScroll: Function;\r\n  refresh: Function;\r\n}\r\n\r\ninterface SrcollPropsType {\r\n  direction: string;\r\n  click: boolean;\r\n  onScroll: any; // 滑动触发的回调函数\r\n  pullUp: any; // 上拉加载逻辑\r\n  pullDown: any; // 下拉加载逻辑\r\n  pullUpLoading: boolean; // 是否显示上拉 loading 动画\r\n  pullDownLoading: boolean; // 是否显示下拉 loading 动画\r\n  bounceTop: boolean; // 是否支持向上吸顶\r\n  bounceBottom: boolean; // 是否支持向下吸底\r\n  children: React.ReactNode;\r\n  refresh: Function;\r\n}\r\n\r\nconst Scroll = React.forwardRef<ScrollImperativeHandle, Partial<SrcollPropsType>>((props, ref) => {\r\n  const [bScroll, setBScroll] = React.useState<BScroll | null>();\r\n  const scrollContaninerRef = React.useRef<HTMLDivElement | null>(null);\r\n\r\n  const { direction, click, refresh, pullUpLoading, pullDownLoading, bounceTop, bounceBottom } =\r\n    props;\r\n\r\n  const { pullUp, pullDown, onScroll } = props;\r\n\r\n  React.useEffect(() => {\r\n    if (bScroll) return;\r\n    const scroll = new BScroll(scrollContaninerRef.current as HTMLDivElement, {\r\n      scrollX: direction === 'horizental',\r\n      scrollY: direction === 'vertical',\r\n      probeType: 3,\r\n      click: click,\r\n      bounce: {\r\n        top: bounceTop,\r\n        bottom: bounceBottom\r\n      }\r\n    });\r\n    setBScroll(scroll);\r\n    return () => {\r\n      setBScroll(null);\r\n    };\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (refresh && bScroll) {\r\n      bScroll.refresh();\r\n    }\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (!bScroll || !onScroll) return;\r\n    bScroll.on('scroll', onScroll);\r\n    return () => {\r\n      bScroll.off('scroll', onScroll);\r\n    };\r\n  }, [onScroll, bScroll]);\r\n\r\n  React.useEffect(() => {\r\n    if (!bScroll || !pullUp) return;\r\n    bScroll.on('scrollEnd', () => {\r\n      // 判断是否滑动到了底部\r\n      if (bScroll.y <= bScroll.maxScrollY + 100) {\r\n        pullUp();\r\n      }\r\n    });\r\n    return () => {\r\n      bScroll.off('scrollEnd');\r\n    };\r\n  }, [pullUp, bScroll]);\r\n\r\n  React.useEffect(() => {\r\n    if (!bScroll || !pullDown) return;\r\n    bScroll.on('touchEnd', (pos: { y: number }) => {\r\n      // 判断用户的下拉动作\r\n      if (pos.y > 50) {\r\n        pullDown();\r\n      }\r\n    });\r\n    return () => {\r\n      bScroll.off('touchEnd');\r\n    };\r\n  }, [pullDown, bScroll]);\r\n\r\n  React.useImperativeHandle(ref, () => ({\r\n    refresh: () => {\r\n      if (bScroll) {\r\n        bScroll.refresh();\r\n        bScroll.scrollTo(0, 0);\r\n      }\r\n    },\r\n    getBScroll: () => {\r\n      if (bScroll) {\r\n        return bScroll;\r\n      }\r\n    },\r\n    finishPullDown() {\r\n      if (bScroll) {\r\n        // setBeforePullDown(false)\r\n        bScroll.finishPullDown();\r\n      }\r\n    }\r\n  }));\r\n\r\n  const classes = classNames('myscroll-container', {\r\n    'myscroll-vertical': direction === 'vertical'\r\n  });\r\n  const renderChildren = () => {\r\n    if (direction === 'vertical') {\r\n      return <div className=\"scroll-content\">{props.children}</div>;\r\n    } else {\r\n      return props.children;\r\n    }\r\n  };\r\n  return (\r\n    <div className={classes} ref={scrollContaninerRef}>\r\n      {renderChildren()}\r\n    </div>\r\n  );\r\n});\r\n\r\nScroll.defaultProps = {\r\n  direction: 'vertical',\r\n  click: true,\r\n  onScroll: null,\r\n  pullUpLoading: false,\r\n  pullDownLoading: false,\r\n  pullUp: null,\r\n  pullDown: null,\r\n  bounceTop: true,\r\n  bounceBottom: true\r\n};\r\nexport default React.memo(Scroll);\r\n","/*\r\n * @Date: 2021-11-18 10:11:09\r\n * @LastEditTime: 2021-12-07 17:39:50\r\n * @LastEditors: k200c\r\n * @Description: 横向滚动组件， 注意每一个需要被render的item的根节点都需加上类名: horizen-item\r\n * @FilePath: \\melodia-ts\\src\\baseUI\\HorizenScroll\\index.tsx\r\n */\r\nimport React, { Children, useCallback, useEffect, useRef } from 'react';\r\nimport Scroll from '../Scroll/scroll';\r\n\r\nconst HorizenScroll: React.FC = (props) => {\r\n  type ScrollComponentType = React.ElementRef<typeof Scroll>;\r\n  const HorizenWrapperRef = useRef<HTMLElement & HTMLDivElement>(null);\r\n  const HorizenScrollRef = useRef<ScrollComponentType>(null);\r\n  useEffect(() => {\r\n    let Dom = HorizenWrapperRef.current as HTMLElement;\r\n    let items = Dom.querySelectorAll<HTMLElement>('.horizen-item');\r\n    let totalWidth = 0;\r\n    Array.from(items).forEach((e) => {\r\n      totalWidth += e.offsetWidth;\r\n    });\r\n    Dom.style.width = `${totalWidth + 100}px`;\r\n    HorizenScrollRef.current?.refresh();\r\n  });\r\n  // const renderChildren = () => {\r\n  //   return React.Children.map(children, (child, index) => {\r\n  //     const childElement =\r\n  //       child as React.FunctionComponentElement<IMenuItemProps>;\r\n  //   })\r\n  // }\r\n  return (\r\n    <Scroll ref={HorizenScrollRef} direction=\"horizental\">\r\n      <div ref={HorizenWrapperRef}>{props.children}</div>\r\n    </Scroll>\r\n  );\r\n};\r\n\r\nexport default HorizenScroll;\r\n","/*\r\n * @Date: 2021-11-23 10:42:32\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-11-29 15:13:41\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\baseUI\\Marquee\\marquee.tsx\r\n */\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\n\r\ninterface IMarqueeProps {\r\n  text: string;\r\n  direction?: string;\r\n  behavior?: string;\r\n  className?: string;\r\n}\r\n\r\nconst Marquee: React.FC<IMarqueeProps> = (props) => {\r\n  const { text, className } = props;\r\n  const classes = classNames('marquee-container', className);\r\n  return (\r\n    <div className={classes}>\r\n      <div className=\"marquee-text\">{text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Marquee;\r\n","/*\r\n * @Date: 2021-11-30 15:51:53\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-01 17:04:10\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\baseUI\\Progress\\progress.tsx\r\n */\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport { prefixStyle } from '../../utils/tools';\r\n\r\nexport interface IProgressProps {\r\n  percent: number;\r\n  percentChange: Function;\r\n}\r\n\r\ninterface ITouchInfo {\r\n  startedTouch: boolean;\r\n  startX: number;\r\n  passed: number;\r\n}\r\n\r\nconst Progress: React.FC<IProgressProps> = (props) => {\r\n  const { percent } = props;\r\n  const { percentChange } = props;\r\n  const progressBarRef = useRef<HTMLDivElement>(null);\r\n  const progressRef = useRef<HTMLDivElement>(null);\r\n  const progressBtnRef = useRef<HTMLDivElement>(null);\r\n  const [TouchInfo, setTouchInfo] = useState<ITouchInfo>();\r\n  const transform = prefixStyle('transform');\r\n\r\n  useEffect(() => {\r\n    if (!progressBarRef.current || !progressRef.current || !progressBtnRef.current) return;\r\n    const barwidth = progressBarRef.current?.clientWidth;\r\n    const offsetWidth = percent * barwidth;\r\n    progressRef.current.style.width = offsetWidth + 'px';\r\n    progressBtnRef.current.style[transform as any] = `translate3d(${\r\n      offsetWidth - progressBtnRef.current.clientWidth / 2\r\n    }px, 0, 0)`;\r\n  }, [percent]);\r\n\r\n  const updateTheProgress = (distance: number) => {\r\n    if (!progressRef.current || !progressBtnRef.current) return;\r\n    progressRef.current.style.width = distance + 'px';\r\n    progressBtnRef.current.style[transform as any] = `translate3d(${distance}px, 0,0)`;\r\n  };\r\n\r\n  const sendNewProgressData = () => {\r\n    if (!progressBarRef.current || !progressBtnRef.current || !progressRef.current) return;\r\n    const barWidth = progressBarRef.current.clientWidth - progressBtnRef.current.clientWidth;\r\n    const newPercent = progressRef.current.clientWidth / barWidth;\r\n    percentChange(newPercent);\r\n  };\r\n\r\n  const handleClickProgress = (event: React.MouseEvent<HTMLElement>) => {\r\n    if (!progressBarRef.current) return;\r\n    // https://developer.mozilla.org/zh-CN/docs/Web/API/Element/getBoundingClientRect\r\n    const domRect = progressBarRef.current.getBoundingClientRect();\r\n    const distance = event.pageX - domRect.left;\r\n    updateTheProgress(distance);\r\n    sendNewProgressData();\r\n  };\r\n\r\n  const handleTouchStart = (event: React.TouchEvent<HTMLElement>) => {\r\n    let touchObj: ITouchInfo = {\r\n      startedTouch: true,\r\n      startX: event.touches[0].pageX,\r\n      passed: progressRef.current?.clientWidth || 0\r\n    };\r\n    setTouchInfo(touchObj);\r\n    sendNewProgressData();\r\n  };\r\n\r\n  const handleTouchMove = (event: React.TouchEvent<HTMLElement>) => {\r\n    if (!TouchInfo?.startedTouch) return;\r\n    if (!progressBarRef.current || !progressBtnRef.current) return;\r\n    const DeltaX = event.touches[0].pageX - TouchInfo.startX;\r\n    const barWidth = progressBarRef.current.clientWidth - progressBtnRef.current.clientWidth;\r\n    const distance = Math.min(Math.max(0, TouchInfo.passed + DeltaX), barWidth);\r\n    updateTheProgress(distance);\r\n  };\r\n\r\n  const handleTouchEnd = (event: React.TouchEvent<HTMLElement>) => {\r\n    const newTouchInfo = { ...TouchInfo };\r\n    newTouchInfo.startedTouch = false;\r\n    setTouchInfo(newTouchInfo as ITouchInfo);\r\n    sendNewProgressData();\r\n  };\r\n\r\n  return (\r\n    <section className=\"progress-bar\">\r\n      <div className=\"bar-inner\" ref={progressBarRef} onClick={handleClickProgress}>\r\n        <div className=\"progress\" ref={progressRef} />\r\n        <div\r\n          className=\"progress-btn-wrapper\"\r\n          ref={progressBtnRef}\r\n          onTouchStart={handleTouchStart}\r\n          onTouchMove={handleTouchMove}\r\n          onTouchEnd={handleTouchEnd}\r\n        >\r\n          <div className=\"progress-btn\" />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default React.memo(Progress);\r\n","/* eslint-disable react/no-this-in-sfc */\r\n/*\r\n * @Date: 2021-12-06 10:11:17\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-07 14:56:11\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\baseUI\\musicNote\\index.tsx\r\n */\r\nimport React, {\r\n  forwardRef,\r\n  useRef,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  ReactChild,\r\n  ReactChildren,\r\n  ReactNode\r\n} from 'react';\r\nimport { Icon } from '../../components';\r\nimport { prefixStyle } from '../../utils/tools';\r\nimport animations from 'create-keyframe-animation';\r\n\r\nconst transform = prefixStyle('transform');\r\n\r\nconst MusicNote = forwardRef((props, refs) => {\r\n  const WrapperRef = useRef(document.createElement('article'));\r\n  const IconRef = useRef(null);\r\n  let IconNum = 3;\r\n\r\n  const RenderIcon = () => {\r\n    return [1, 2, 3].map((item) => {\r\n      return (\r\n        <div key={item} className=\"icon-wrapper\">\r\n          <span>\r\n            <Icon icon=\"music\" />\r\n          </span>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  const startAnimation = (y: number) => {\r\n    if (!WrapperRef.current) return;\r\n    for (let i = 0; i < IconNum; i++) {\r\n      const items = Array.from(WrapperRef.current.querySelectorAll<HTMLElement>('.icon-wrapper'));\r\n      let item: any = items[i];\r\n      if (item.running === false) {\r\n        item.style.left = '100px';\r\n        item.style.top = y + 'px';\r\n        item.style.display = 'inline-block';\r\n\r\n        setTimeout(() => {\r\n          item.running = true;\r\n          item.style[transform] = `translate3d(0, 700px, 0)`;\r\n          let icon = item.querySelector('span');\r\n          icon.style[transform] = `translate3d(50vw, 0, 0)`;\r\n        }, 0);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    for (let i = 0; i < IconNum; i++) {\r\n      const items = Array.from(WrapperRef.current.querySelectorAll<HTMLElement>('.icon-wrapper'));\r\n      items.forEach((item: any) => {\r\n        item.running = false;\r\n        item.addEventListener(\r\n          'transitionend',\r\n          function (this: any) {\r\n            this.style['display'] = 'none';\r\n            this.style[transform as any] = `translate3d(0, 0, 0)`;\r\n            this.running = false;\r\n            let icon = this.querySelector('span');\r\n            icon.style[transform as any] = `translate3d(0, 0, 0)`;\r\n          },\r\n          false\r\n        );\r\n      });\r\n    }\r\n  }, []);\r\n  useImperativeHandle(refs, () => ({ startAnimation }));\r\n\r\n  return (\r\n    <article ref={WrapperRef} className=\"musicnote-wrapper\">\r\n      {RenderIcon()}\r\n    </article>\r\n  );\r\n});\r\n\r\nexport default MusicNote;\r\n","/*\r\n * @Date: 2021-12-13 17:39:31\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-29 15:31:28\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\baseUI\\SongList\\index.tsx\r\n */\r\nimport classNames from 'classnames';\r\nimport React, { useRef } from 'react';\r\nimport { Icon } from '../../components';\r\nimport { getName } from '../../utils/tools';\r\nimport MusicNote from '../musicNote';\r\n\r\ninterface ISongListProps {\r\n  songs: any[];\r\n  onClickCallback: Function;\r\n  showNum?: boolean;\r\n  className?: string;\r\n  showPlayAll?: boolean;\r\n  onClickPlayAll?: Function;\r\n}\r\nconst SongList: React.FC<ISongListProps> = (props) => {\r\n  const { songs, showNum, className, showPlayAll } = props;\r\n  const { onClickCallback, onClickPlayAll } = props;\r\n  const wrapperClasses = classNames('songs-wrapper', className);\r\n  const itemClasses = classNames('song-item', {\r\n    isIndent: !showNum\r\n  });\r\n  const musicNoteRef = useRef<any>();\r\n  const handleClickSong = (event: React.MouseEvent, item: any) => {\r\n    if (musicNoteRef.current) {\r\n      musicNoteRef.current.startAnimation(event.nativeEvent.clientY);\r\n    }\r\n    onClickCallback(event, item);\r\n  };\r\n  return (\r\n    <>\r\n      <section className={wrapperClasses}>\r\n        {showPlayAll && (\r\n          <article className=\"first-line\">\r\n            <div\r\n              className=\"play-all\"\r\n              onClick={() => {\r\n                if (onClickPlayAll) onClickPlayAll();\r\n              }}\r\n            >\r\n              <span className=\"playicon\">\r\n                <Icon icon=\"play-circle\" />\r\n              </span>\r\n              <span>\r\n                {' '}\r\n                播放全部 <span className=\"sum\">({songs.length})</span>\r\n              </span>\r\n            </div>\r\n          </article>\r\n        )}\r\n        <ul className=\"songs-ul\">\r\n          {songs.map((item: any, index: number) => {\r\n            const artist = item.ar || item.artists;\r\n            const albumName = item.al ? item.al.name : item.album.name;\r\n            return (\r\n              <li key={item.name + index} onClick={(e) => handleClickSong(e, item)}>\r\n                {showNum && <span className=\"index\">{index + 1}</span>}\r\n                <div className={itemClasses}>\r\n                  <span className=\"song-name\">{item.name}</span>\r\n                  <span className=\"singer-name\">\r\n                    <Icon icon=\"h-square\" />\r\n                    {getName(artist)} - {albumName}\r\n                  </span>\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </section>\r\n      <MusicNote ref={musicNoteRef} />\r\n    </>\r\n  );\r\n};\r\n\r\nSongList.defaultProps = {\r\n  showNum: true,\r\n  showPlayAll: false\r\n};\r\nexport default SongList;\r\n","/*\r\n * @Date: 2021-12-13 17:39:31\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2022-01-07 13:35:03\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\baseUI\\PlayList\\index.tsx\r\n */\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\nimport { Icon } from '../../components';\r\nimport { getCount } from '../../utils/tools';\r\nimport LazyLoad, { forceCheck } from 'react-lazyload';\r\nimport defaultImg from './../../assets/img/defaultmusic.png';\r\n\r\ninterface IPlaylistProps {\r\n  data: any[];\r\n  onClickCallback: Function;\r\n}\r\nconst CommonPlaylist: React.FC<IPlaylistProps> = (props) => {\r\n  const { data } = props;\r\n  const { onClickCallback } = props;\r\n  return (\r\n    <div className=\"playlist-wrapper\">\r\n      {data.map((item, index) => {\r\n        return (\r\n          <div\r\n            key={item.id + index}\r\n            className=\"playlist-item\"\r\n            onClick={(_) => onClickCallback(item.id)}\r\n          >\r\n            <div className=\"item-pic-wrapper\">\r\n              <LazyLoad placeholder={<img width=\"100%\" height=\"100%\" src={defaultImg} />}>\r\n                <img className=\"playlist-item-pic\" src={item.coverImgUrl + '?param=300x300'} />\r\n              </LazyLoad>\r\n            </div>\r\n            <div className=\"play-count\">\r\n              <Icon icon=\"play\" />\r\n              {getCount(item.playCount)}\r\n            </div>\r\n            <span className=\"recommend-item-name\">{item.name}</span>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommonPlaylist;\r\n","/*\r\n * @Date: 2021-11-19 17:39:05\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-11-24 11:43:38\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Album\\store\\constants.ts\r\n */\r\nexport const GET_ALBUMDETAIL = 'album/GET_ALBUMDETAIL';\r\nexport const SAVE_ALBUMDETAIL = 'album/SAVE_ALBUMDETAIL';\r\n","/*\r\n * @Date: 2021-11-25 14:15:45\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2022-01-07 13:53:51\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Rank\\store\\constans.ts\r\n */\r\nexport const GET_RANKLIST = 'rank/GET_RANKLIST';\r\nexport const SAVE_RANKLIST = 'rank/SAVE_RANKLIST';\r\n","/*\r\n * @Author: Censwin\r\n * @Date: 2021-11-14 21:29:17\r\n * @LastEditTime: 2021-12-09 16:59:27\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\services\\discoverApi.ts\r\n */\r\nimport Request from './index';\r\nimport { AxiosPromise } from 'axios';\r\nexport interface IBannerRes {\r\n  banners: any[];\r\n}\r\n\r\nexport interface IRecommendListRes {\r\n  result: any[];\r\n}\r\n\r\nexport interface IVideoRes {\r\n  urls: {\r\n    url: string;\r\n  }[];\r\n}\r\n\r\nexport const getBannerList = (): AxiosPromise<IBannerRes> => {\r\n  return Request.request({\r\n    url: '/banner'\r\n  });\r\n};\r\n\r\nexport const getRecommendList = (): AxiosPromise<IRecommendListRes> => {\r\n  return Request.request({\r\n    url: '/personalized?limit=10'\r\n  });\r\n};\r\n\r\nexport const getVideoUrlReq = (): AxiosPromise<any> => {\r\n  return Request.request({\r\n    url: '/video/url',\r\n    params: {\r\n      id: '89ADDE33C0AAE8EC14B99F6750DB954D'\r\n    }\r\n  });\r\n};\r\n","/*\r\n * @Date: 2021-11-17 14:47:57\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-09 16:49:40\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Discover\\store\\constants.ts\r\n */\r\nexport const GET_BANNER = 'discover/GET_BANNERLIST';\r\nexport const SAVE_BANNER = 'discover/SAVE_BANNERLIST';\r\nexport const GET_RECOMMEND = 'discover/GET_RECOMMEND';\r\nexport const SAVE_RECOMMEND = 'discover/SAVE_RECOMMEND';\r\nexport const GET_VIDEO_URL = 'discover/GET_VIDEO_URL';\r\nexport const SAVE_VIDEO_URL = 'discover/SAVE_VIDEO_URL';\r\n","/*\r\n * @Author: Censwin\r\n * @Date: 2021-11-14 17:37:43\r\n * @LastEditTime: 2021-12-09 17:00:56\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Discover\\store\\sagas.ts\r\n */\r\nimport { takeLatest, put, call } from '@redux-saga/core/effects';\r\nimport {\r\n  getBannerList,\r\n  getRecommendList,\r\n  getVideoUrlReq,\r\n  IBannerRes,\r\n  IRecommendListRes,\r\n  IVideoRes\r\n} from '../../../services/discoverApi';\r\nimport * as actionTypes from './constants';\r\nexport function* fetchBanner() {\r\n  try {\r\n    const { banners } = (yield call(getBannerList)) as IBannerRes;\r\n    yield put({ type: actionTypes.SAVE_BANNER, payload: banners });\r\n  } catch (error) {\r\n    console.error('拦截到了:' + error);\r\n  }\r\n}\r\n\r\nexport function* fetchRecommendList(): Generator<any> {\r\n  try {\r\n    const { result } = (yield call(getRecommendList)) as IRecommendListRes;\r\n    yield put({ type: actionTypes.SAVE_RECOMMEND, payload: result });\r\n  } catch (error) {\r\n    console.error('拦截到了:' + error);\r\n  }\r\n}\r\n\r\nfunction* fetchVideo() {\r\n  try {\r\n    const { urls } = (yield call(getVideoUrlReq)) as IVideoRes;\r\n    yield put({ type: actionTypes.SAVE_VIDEO_URL, payload: urls[0].url });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport default function* DiscoverWatcher() {\r\n  yield takeLatest(actionTypes.GET_BANNER, fetchBanner);\r\n  yield takeLatest(actionTypes.GET_RECOMMEND, fetchRecommendList);\r\n  yield takeLatest(actionTypes.GET_VIDEO_URL, fetchVideo);\r\n}\r\n","/*\r\n * @Author: Censwin\r\n * @Date: 2021-11-14 17:37:30\r\n * @LastEditTime: 2021-12-09 16:51:00\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Discover\\store\\reducer.ts\r\n */\r\nimport { Reducer } from 'redux';\r\nimport produce, { Draft } from 'immer';\r\nimport * as ActionTypes from './constants';\r\n\r\ninterface bannerItem {\r\n  imageUrl: string;\r\n}\r\nexport interface IDiscoverState {\r\n  bannerList: bannerItem[];\r\n  recommendList: any[];\r\n  videoUrl: string;\r\n}\r\n\r\nconst defaultState: IDiscoverState = {\r\n  bannerList: [],\r\n  recommendList: [],\r\n  videoUrl: ''\r\n};\r\n\r\nconst DiscoverReducer: Reducer<IDiscoverState> = (state = defaultState, action) => {\r\n  return produce(state, (draft: Draft<IDiscoverState>) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case ActionTypes.SAVE_BANNER:\r\n        draft.bannerList = payload;\r\n        break;\r\n      case ActionTypes.SAVE_RECOMMEND:\r\n        draft.recommendList = payload;\r\n        break;\r\n      case ActionTypes.SAVE_VIDEO_URL:\r\n        draft.videoUrl = payload;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default DiscoverReducer;\r\n","/*\r\n * @Date: 2021-11-18 14:16:56\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2022-01-07 11:26:41\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Recommend\\store\\constants.ts\r\n */\r\nexport const GET_CATELIST = 'recommend/GET_CATELIST';\r\nexport const SAVE_CATELIST = 'recommend/SAVE_CATELIST';\r\n\r\nexport const GET_PLAYLISTS = 'recommend/GET_PLAYLISTS';\r\nexport const SAVE_PLAYLISTS = 'recommend/SAVE_PLAYLISTS';\r\n\r\nexport const CHANGE_CATETYPE = 'recommend/CHANGE_CATETYPE';\r\nexport const CHANGE_LOADING = 'recommend/CHANGE_LOADING';\r\n","/*\r\n * @Date: 2021-11-18 14:31:31\r\n * @LastEditors: Please set LastEditors\r\n * @LastEditTime: 2021-11-18 16:59:46\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\services\\recommendAPI.ts\r\n */\r\nimport Request from './index';\r\nimport { AxiosPromise } from 'axios';\r\n\r\nexport interface IHotCateRes {\r\n  tags: any[];\r\n}\r\nexport const getHotCateList = (): AxiosPromise<IHotCateRes> => {\r\n  return Request.request({\r\n    url: '/playlist/hot'\r\n  });\r\n};\r\n\r\nexport interface IPlayListParams {\r\n  cat?: string;\r\n  limit?: number;\r\n}\r\nexport interface IPlayListRes {\r\n  playlists: any[];\r\n}\r\nexport const getPlayLists = (params: IPlayListParams): AxiosPromise<IPlayListRes> => {\r\n  return Request.request({\r\n    url: '/top/playlist',\r\n    params: params\r\n  });\r\n};\r\n","/*\r\n * @Date: 2021-11-18 14:20:14\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2022-01-07 14:31:01\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Recommend\\store\\saga.ts\r\n */\r\nimport { takeLatest, put, call } from '@redux-saga/core/effects';\r\nimport * as ActionTypes from './constants';\r\nimport {\r\n  IHotCateRes,\r\n  getHotCateList,\r\n  getPlayLists,\r\n  IPlayListRes,\r\n  IPlayListParams\r\n} from '../../../services/recommendAPI';\r\nimport { Action } from 'redux';\r\n\r\nfunction* fetchHotCateList() {\r\n  yield put({ type: 'global/CHANGE_GLOBAL_LOADING', payload: true });\r\n  try {\r\n    const { tags } = (yield call(getHotCateList)) as IHotCateRes;\r\n    yield put({ type: ActionTypes.SAVE_CATELIST, payload: tags });\r\n    const param = { cat: tags[0].name as string, limit: 50 };\r\n    yield put({ type: ActionTypes.GET_PLAYLISTS, payload: param });\r\n  } catch (error) {\r\n    console.error(error);\r\n    yield put({ type: 'global/CHANGE_GLOBAL_LOADING', payload: false });\r\n  }\r\n}\r\n\r\ninterface PlaylistAction extends Action {\r\n  payload: IPlayListParams;\r\n}\r\nfunction* fetchPlayLists(action: PlaylistAction) {\r\n  const { payload } = action;\r\n  yield put({ type: 'global/CHANGE_GLOBAL_LOADING', payload: true });\r\n  try {\r\n    const { playlists } = (yield call(getPlayLists, payload)) as IPlayListRes;\r\n    yield put({ type: ActionTypes.SAVE_PLAYLISTS, payload: playlists });\r\n    yield put({ type: 'global/CHANGE_GLOBAL_LOADING', payload: false });\r\n  } catch (error) {\r\n    yield put({ type: 'global/CHANGE_GLOBAL_LOADING', payload: true });\r\n  }\r\n}\r\n\r\nexport default function* () {\r\n  yield takeLatest(ActionTypes.GET_CATELIST, fetchHotCateList);\r\n  yield takeLatest(ActionTypes.GET_PLAYLISTS, fetchPlayLists);\r\n}\r\n","/*\r\n * @Date: 2021-11-18 14:07:56\r\n * @LastEditors: Please set LastEditors\r\n * @LastEditTime: 2021-11-19 11:15:35\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Recommend\\store\\reducer.ts\r\n */\r\nimport { Reducer } from 'redux';\r\nimport produce, { Draft } from 'immer';\r\nimport * as ActionTypes from './constants';\r\nimport { DRAFTABLE } from 'immer/dist/internal';\r\n\r\nexport interface IRcomendState {\r\n  cateList: any[];\r\n  playLists: any[]; // 歌单列表\r\n  loading: Boolean;\r\n}\r\nconst defaultState: IRcomendState = {\r\n  cateList: [],\r\n  playLists: [],\r\n  loading: false\r\n};\r\n\r\nconst RecommendReducer: Reducer<IRcomendState> = (state = defaultState, action) => {\r\n  return produce(state, (draft: Draft<IRcomendState>) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case ActionTypes.SAVE_CATELIST:\r\n        draft.cateList = payload;\r\n        break;\r\n      case ActionTypes.SAVE_PLAYLISTS:\r\n        draft.playLists = payload;\r\n        break;\r\n      case ActionTypes.CHANGE_LOADING:\r\n        draft.loading = payload;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default RecommendReducer;\r\n","export default __webpack_public_path__ + \"static/media/defaultmusic.597f781d.png\";","/*\r\n * @Date: 2021-11-29 10:26:45\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-17 15:19:41\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Player\\store\\constans.ts\r\n */\r\n\r\nexport const SET_ISFULL_SCREEN = 'player/SET_ISFULL_SCREEN';\r\n\r\nexport const SET_CURRENT_SONG = 'player/SET_CURRENT_SONG';\r\nexport const SET_PLAYING_STATE = 'player/SET_PLAYING_STATE';\r\nexport const SET_SEQUECE_PLAYLIST = 'player/SET_SEQUECE_PLAYLIST';\r\nexport const SET_PLAYLIST = 'player/SET_PLAYLIST';\r\nexport const SET_PLAY_MODE = 'player/SET_PLAY_MODE';\r\nexport const SET_CURRENT_INDEX = 'player/SET_CURRENT_INDEX';\r\nexport const SET_SHOW_PLAYLIST = 'player/SET_SHOW_PLAYLIST';\r\n\r\nexport const CHANGE_PLAYMODE = 'player/CHANGE_PLAYMODE';\r\nexport const SET_PLAYMODE_TEXT = 'player/SET_PLAYMODE_TEXT';\r\n\r\nexport const ADD_CURRENT_SONG = 'player/ADD_CURRENT_SONG';\r\nexport const DEL_CURRENT_SONG = 'player/DEL_CURRENT_SONG';\r\n\r\nexport const PLAY_ALL = 'player/PLAY_ALL';\r\n\r\nexport const GET_LYRIC = 'player/GET_LYRIC';\r\nexport const SAVE_LYRIC = 'player/SAVE_LYRIC';\r\n\r\nexport const GET_SONG_DETAIL = 'player/GET_SONG_DETAIL';\r\nexport const INSERT_SONG = 'player/INSERT_SONG';\r\n","/*\r\n * @Date: 2021-11-17 14:47:57\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-29 15:49:05\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\utils\\tools.ts\r\n */\r\nimport React from 'react';\r\nimport * as ReactIs from 'react-is';\r\n\r\nexport const debounce = () => {};\r\n\r\nexport const getCount = (count: number) => {\r\n  if (count < 0) return;\r\n  if (count < 10000) return count;\r\n  let a;\r\n  if (count < 10000 * 10000) {\r\n    a = Math.ceil(count / 10000);\r\n    return `${a}万`;\r\n  }\r\n  a = Math.ceil(count / (10000 * 10000));\r\n  return `${a}亿`;\r\n};\r\n\r\nexport const getName = (nameArr: { name: string }[]) => {\r\n  return nameArr.reduce((text, currentValue) => {\r\n    return text + ' ' + currentValue.name;\r\n  }, '');\r\n};\r\n\r\nexport const isEmptyObject = (obj: any) => {\r\n  return (\r\n    !obj ||\r\n    obj.constructor === Array ||\r\n    (obj.constructor === Object && Object.keys(obj).length === 0)\r\n  );\r\n};\r\n\r\nexport const filterRankList = (list: Array<any>) => {\r\n  // const recommend = ['云音乐欧美热歌榜', '云音乐韩语榜', '美国Billboard榜']; // 推荐榜\r\n  const choiceness = ['黑胶VIP爱听榜', '网络热歌榜', 'KTV唛榜']; // 精选榜\r\n  const musicstyle = [\r\n    '云音乐电音榜',\r\n    '云音乐ACG榜',\r\n    '云音乐说唱榜',\r\n    '云音乐摇滚榜',\r\n    '云音乐民谣榜',\r\n    '云音乐国电榜',\r\n    '云音乐古典榜',\r\n    '云音乐古风榜',\r\n    '中文DJ榜'\r\n  ]; // 曲风榜\r\n  const global = [\r\n    '美国Billboard榜',\r\n    'UK排行榜周榜',\r\n    '日本Oricon榜',\r\n    '法国 NRJ Vos Hits 周榜',\r\n    '俄罗斯top hit流行音乐榜',\r\n    '云音乐欧美新歌榜',\r\n    '云音乐欧美热歌榜',\r\n    '云音乐日语榜',\r\n    '云音乐韩语榜',\r\n    '俄语榜',\r\n    '越南语榜'\r\n  ]; // 全球榜\r\n  let index;\r\n  let officialList = []; // 官方榜\r\n  let choicenessList = [];\r\n  let musicstyleList = [];\r\n  let globalList = [];\r\n  let specialList = [];\r\n  for (let i = 0; i < list.length; i++) {\r\n    if (list[i].tracks.length && !list[i + 1].tracks.length) {\r\n      index = i + 1;\r\n      break;\r\n    }\r\n  }\r\n  officialList = list.slice(0, index);\r\n  let list2 = list.slice(index);\r\n  for (const cur of list2) {\r\n    if (choiceness.some((name) => name === cur.name)) {\r\n      choicenessList.push(cur);\r\n      continue;\r\n    } else if (musicstyle.some((name) => name === cur.name)) {\r\n      musicstyleList.push(cur);\r\n      continue;\r\n    } else if (global.some((name) => name === cur.name)) {\r\n      globalList.push(cur);\r\n      continue;\r\n    } else {\r\n      specialList.push(cur);\r\n    }\r\n  }\r\n  return [officialList, choicenessList, musicstyleList, globalList, specialList];\r\n};\r\n\r\nlet vendor = (() => {\r\n  // 通过 transition 属性判断浏览器\r\n  let elementStyle = document.createElement('div').style;\r\n  interface TransformNamesInterface {\r\n    webkit: string;\r\n    Moz: string;\r\n    O: string;\r\n    ms: string;\r\n    standard: string;\r\n    [key: string]: any;\r\n  }\r\n  let transformNames: TransformNamesInterface = {\r\n    webkit: 'webkitTransform',\r\n    Moz: 'MozTransform',\r\n    O: 'OTransfrom',\r\n    ms: 'msTransform',\r\n    standard: 'Transform'\r\n  };\r\n  for (let key in transformNames) {\r\n    if (elementStyle[transformNames[key]] !== undefined) {\r\n      return key;\r\n    }\r\n  }\r\n  return false;\r\n})();\r\n\r\nexport function prefixStyle(style: string): string {\r\n  if (vendor === false) {\r\n    return '';\r\n  }\r\n  if (vendor === 'standard') {\r\n    return style;\r\n  }\r\n  return vendor + style.charAt(0).toUpperCase() + style.substr(1);\r\n}\r\n\r\nexport function createSongUrl(id: string): string {\r\n  return `https://music.163.com/song/media/outer/url?id=${id}.mp3`;\r\n}\r\n\r\nexport const formatPlayTime = (interval: any) => {\r\n  let _interval = interval | 0; // |0表示向下取整\r\n  const minute = (_interval / 60) | 0;\r\n  const second = (_interval % 60).toString().padStart(2, '0');\r\n  return `${minute}:${second}`;\r\n};\r\n\r\nexport const findCurrentIndex = (current: any, list: Array<any>) => {\r\n  return list.findIndex((item) => item.id === current.id);\r\n};\r\n\r\nconst getRandomInt = (max: number) => {\r\n  return Math.floor(Math.random() * max);\r\n};\r\nexport type TShuffle = <T>(arr: T[]) => T[];\r\nexport const shuffle: TShuffle = (arr) => {\r\n  const newArr = [...arr];\r\n  let [m, i] = [newArr.length, 0];\r\n  while (m) {\r\n    i = (Math.random() * m--) >>> 0;\r\n    [newArr[m], newArr[i]] = [newArr[i], newArr[m]];\r\n  }\r\n  return newArr;\r\n};\r\n\r\nexport const getResOrderLable = (arr: string[]) => {\r\n  const newArr = arr.map((item) => {\r\n    switch (item) {\r\n      case 'songs':\r\n        return '歌曲';\r\n      case 'artists':\r\n        return '歌手';\r\n      case 'albums':\r\n        return '专辑';\r\n      case 'playlists':\r\n        return '歌单';\r\n      default:\r\n        return '--';\r\n    }\r\n  });\r\n  return newArr;\r\n};\r\n\r\nexport interface Option {\r\n  keepEmpty?: boolean;\r\n}\r\n\r\nexport default function ChildrenToArray(\r\n  children: React.ReactNode,\r\n  option: Option = {}\r\n): React.ReactElement[] {\r\n  let ret: React.ReactElement[] = [];\r\n\r\n  React.Children.forEach(children, (child: any) => {\r\n    if ((child === undefined || child === null) && !option.keepEmpty) {\r\n      return;\r\n    }\r\n\r\n    if (Array.isArray(child)) {\r\n      ret = ret.concat(ChildrenToArray(child));\r\n    } else if (ReactIs.isFragment(child) && child.props) {\r\n      ret = ret.concat(ChildrenToArray(child.props.children, option));\r\n    } else {\r\n      ret.push(child);\r\n    }\r\n  });\r\n\r\n  return ret;\r\n}\r\n"],"sourceRoot":""}