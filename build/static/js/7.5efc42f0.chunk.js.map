{"version":3,"sources":["hooks/useDebounce.tsx","application/Search/component/filter.tsx","application/Search/index.tsx"],"names":["useDebounce","value","delay","useState","state","setState","useEffect","timer","setTimeout","clearTimeout","Filter","props","HotKey","handleCancel","handleSearch","setShowHotkey","inputRef","useRef","document","createElement","inputVal","setInputVal","current","focus","length","className","onSubmit","e","stopPropagation","preventDefault","icon","onClick","type","ref","placeholder","onChange","target","React","memo","Search","showState","setShowState","nodeRef","history","useHistory","showHotkey","setHotKey","dispatch","useDispatch","selectedOption","setSelectedOption","useSelector","hotKeyList","suggestObject","songsList","ScrollRef","enterLoading","ActionType","refresh","useCallback","val","payload","FilterProps","handleClickHotkey","nodeType","tagName","parentNode","text","querySelector","innerText","handleChangePannel","key","enterDetail","id","push","handleSelectSong","event","item","renderHotKeys","style","textIndent","map","index","first","RenderSongs","songs","onClickCallback","showNum","RenderPlayList","data","playlists","RenderSingers","singers","artists","width","height","src","defaultImg","alt","picUrl","name","RenderAlbums","albums","padding","direction","textAlign","renderContent","option","renderResult","isEmptyObject","order","onTabClick","Item","label","CSSTransition","in","appear","classNames","timeout","unmountOnExit","onExited","goBack"],"mappings":"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","file":"static/js/7.5efc42f0.chunk.js","sourcesContent":["/*\r\n * @Date: 2021-12-13 10:31:28\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2021-12-13 10:34:33\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\hooks\\useDebounce.tsx\r\n */\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction useDebounce(value: any, delay = 500) {\r\n  const [state, setState] = useState(value);\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setState(value);\r\n    }, delay);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [value]);\r\n  return state;\r\n}\r\n\r\nexport default useDebounce;\r\n","/*\r\n * @Date: 2021-12-13 10:47:47\r\n * @LastEditors: Please set LastEditors\r\n * @LastEditTime: 2021-12-17 23:50:23\r\n * @Description:\r\n * @FilePath: /melodia-ts/src/application/Search/component/filter.tsx\r\n */\r\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport useDebounce from '../../../hooks/useDebounce';\r\nimport { Icon } from '../../../components';\r\n\r\ninterface IFilterProps {\r\n  handleCancel: () => void;\r\n  handleSearch: (val: string) => void;\r\n  setShowHotkey: Function;\r\n  HotKey: string;\r\n}\r\nconst Filter: React.FC<IFilterProps> = (props) => {\r\n  const { HotKey } = props;\r\n  const { handleCancel, handleSearch, setShowHotkey } = props;\r\n  const inputRef = useRef<HTMLInputElement>(document.createElement('input'));\r\n  const [inputVal, setInputVal] = useState('');\r\n  const debounceVal = useDebounce(inputVal);\r\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputVal(e.target.value);\r\n  };\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    handleSearch(inputVal);\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n  };\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, []);\r\n  useEffect(() => {\r\n    setShowHotkey(inputVal.length === 0);\r\n  }, [inputVal]);\r\n  useEffect(() => {\r\n    if (inputVal !== HotKey) {\r\n      setInputVal(HotKey);\r\n      inputRef.current.value = HotKey;\r\n    }\r\n  }, [HotKey]);\r\n\r\n  return (\r\n    <article className=\"search-header\">\r\n      <form className=\"filter\" onSubmit={handleSubmit}>\r\n        <Icon className=\"header-back\" icon=\"chevron-left\" onClick={handleCancel} />\r\n        <div className=\"input-wrapper\">\r\n          <Icon icon=\"search\" />\r\n          <input\r\n            type=\"text\"\r\n            ref={inputRef}\r\n            placeholder=\"搜索音乐、视频、博客、歌词\"\r\n            onChange={handleInput}\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"button\"\r\n          value=\"搜索\"\r\n          className=\"search-button\"\r\n          onClick={(e) => {\r\n            handleSearch(inputVal);\r\n            return false;\r\n          }}\r\n        />\r\n      </form>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default React.memo(Filter);\r\n","/*\r\n * @Date: 2021-12-09 17:18:49\r\n * @LastEditors: k200c\r\n * @LastEditTime: 2022-01-06 17:32:22\r\n * @Description:\r\n * @FilePath: \\melodia-ts\\src\\application\\Search\\index.tsx\r\n */\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { CommonPlaylist, CommonSongList, Scroll } from '../../baseUI';\r\nimport { Icon, Tabs } from '../../components';\r\nimport { IApplicationState } from '../../store/reducers';\r\nimport { isEmptyObject } from '../../utils/tools';\r\nimport Filter from './component/filter';\r\nimport * as ActionType from './store/constants';\r\nimport LazyLoad from 'react-lazyload';\r\nimport defaultImg from './../../assets/img/defaultmusic.png';\r\n\r\nconst Search = () => {\r\n  const [showState, setShowState] = useState(true);\r\n  const nodeRef = useRef(null);\r\n  const history = useHistory();\r\n  const [showHotkey, setShowHotkey] = useState(true);\r\n  const [HotKey, setHotKey] = useState('');\r\n  const dispatch = useDispatch();\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n  const { hotKeyList, suggestObject, songsList, enterLoading } = useSelector(\r\n    (state: IApplicationState) => state.Search\r\n  );\r\n  type ScrollComponentType = React.ElementRef<typeof Scroll>;\r\n  const ScrollRef = useRef<ScrollComponentType>(null);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: ActionType.GET_HOT_KEYWRODS });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    ScrollRef.current?.refresh();\r\n  }, [songsList]);\r\n\r\n  const handleCancel = useCallback(() => {\r\n    setShowState(false);\r\n  }, []);\r\n\r\n  const onExited = () => {\r\n    history.goBack();\r\n    dispatch({ type: ActionType.CLEAR_DATA });\r\n  };\r\n\r\n  const handleSearch = useCallback((val: string) => {\r\n    dispatch({ type: ActionType.SEARCH_KEYWORD, payload: val });\r\n  }, []);\r\n\r\n  const FilterProps = {\r\n    handleCancel,\r\n    handleSearch,\r\n    setShowHotkey,\r\n    HotKey\r\n  };\r\n\r\n  const handleClickHotkey = (e: React.MouseEvent) => {\r\n    let target = e.target as HTMLElement;\r\n    while (target.nodeType === 1 && target.tagName !== 'LI') {\r\n      target = target.parentNode as HTMLElement;\r\n    }\r\n    const text = target.querySelector('span')?.innerText || '';\r\n    setHotKey(text);\r\n    handleSearch(text);\r\n  };\r\n\r\n  const handleChangePannel = (key: string) => {\r\n    setSelectedOption(key);\r\n  };\r\n\r\n  const enterDetail = useCallback((id) => {\r\n    history.push(`/album/${id}`);\r\n  }, []);\r\n\r\n  const handleSelectSong = (event: React.MouseEvent, item: any) => {\r\n    dispatch({ type: 'player/GET_SONG_DETAIL', payload: item.id });\r\n  };\r\n\r\n  // ===========================Render================================\r\n\r\n  const renderHotKeys = useCallback(() => {\r\n    if (showHotkey) {\r\n      return (\r\n        <>\r\n          <h3 style={{ textIndent: '1em' }}>热搜榜</h3>\r\n          <ul className=\"hotkey-wrapper\" onClick={handleClickHotkey}>\r\n            {hotKeyList.length > 0 &&\r\n              hotKeyList.map(({ first }, index: number) => {\r\n                return (\r\n                  <li key={first}>\r\n                    <i>{index + 1}</i>\r\n                    <span>{first}</span>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </>\r\n      );\r\n    }\r\n  }, [hotKeyList, showHotkey]);\r\n\r\n  const RenderSongs = useCallback(() => {\r\n    return (\r\n      <div className=\"scroll-w-wrapper\">\r\n        <Scroll ref={ScrollRef}>\r\n          <CommonSongList songs={songsList} onClickCallback={handleSelectSong} showNum={false} />\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }, [songsList]);\r\n\r\n  const RenderPlayList = useCallback(() => {\r\n    return (\r\n      <CommonPlaylist\r\n        data={suggestObject.playlists ? suggestObject.playlists : []}\r\n        onClickCallback={enterDetail}\r\n      />\r\n    );\r\n  }, [suggestObject.playlists]);\r\n\r\n  const RenderSingers = useCallback(() => {\r\n    let singers = suggestObject.artists;\r\n    if (!singers || !singers.length) {\r\n      return <h1>暂无数据</h1>;\r\n    }\r\n    return (\r\n      <div className=\"singer-wrapper\">\r\n        {singers.map((item, index) => {\r\n          return (\r\n            <div\r\n              className=\"singer-item\"\r\n              key={index}\r\n              onClick={() => history.push(`/singers/${item.id}`)}\r\n            >\r\n              <div className=\"singer-left\">\r\n                <div className=\"img_wrapper\">\r\n                  <LazyLoad\r\n                    placeholder={<img width=\"100%\" height=\"100%\" src={defaultImg} alt=\"singer\" />}\r\n                  >\r\n                    <img\r\n                      src={item.picUrl + '?param=300x300'}\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                      alt=\"music\"\r\n                    />\r\n                  </LazyLoad>\r\n                </div>\r\n                <span className=\"name\"> 歌手: {item.name}</span>\r\n              </div>\r\n              <div className=\"singer-right\">\r\n                <Icon icon=\"chevron-right\" />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }, [suggestObject.artists]);\r\n\r\n  const RenderAlbums = useCallback(() => {\r\n    if (suggestObject.albums) {\r\n      return (\r\n        <div style={{ padding: '0 15%' }}>\r\n          {suggestObject.albums.map((item: any, index: number) => {\r\n            const direction = index % 2 ? 'right' : 'left';\r\n            return (\r\n              <h2 key={item.id} style={{ textAlign: direction }}>\r\n                {item.name}\r\n              </h2>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n  }, [suggestObject.albums]);\r\n\r\n  const renderContent = useCallback(\r\n    (option: string) => {\r\n      switch (option) {\r\n        case '歌曲':\r\n          return RenderSongs();\r\n        case '歌手':\r\n          return RenderSingers();\r\n        case '歌单':\r\n          return RenderPlayList();\r\n        case '专辑':\r\n          return RenderAlbums();\r\n        default:\r\n          return <h1 style={{ textAlign: 'center' }}>功能开发中</h1>;\r\n      }\r\n    },\r\n    [selectedOption, songsList, suggestObject]\r\n  );\r\n\r\n  const renderResult = useCallback(() => {\r\n    if (isEmptyObject(suggestObject)) return null;\r\n    if (!suggestObject.order) return null;\r\n    if (showHotkey) return null;\r\n    return (\r\n      <article className=\"result-wrapper\">\r\n        <Tabs onTabClick={handleChangePannel}>\r\n          {suggestObject.order.map((item) => {\r\n            return (\r\n              <Tabs.Item label={item} key={item}>\r\n                {renderContent(item)}\r\n              </Tabs.Item>\r\n            );\r\n          })}\r\n        </Tabs>\r\n      </article>\r\n    );\r\n  }, [songsList, songsList.length, suggestObject, suggestObject.order, showHotkey]);\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={showState}\r\n      appear={true}\r\n      classNames=\"common-fadeInUp\"\r\n      timeout={300}\r\n      unmountOnExit\r\n      onExited={onExited}\r\n      nodeRef={nodeRef}\r\n    >\r\n      <section className=\"search-container\" ref={nodeRef}>\r\n        <Filter {...FilterProps} />\r\n        {renderHotKeys()}\r\n        {renderResult()}\r\n      </section>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default React.memo(Search);\r\n"],"sourceRoot":""}